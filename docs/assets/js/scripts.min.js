"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(r){r.fn.swipe=function(e){var c=r.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var t=r(this),n=0,o=0,i=!1,s=t.find(".slider"),a=t.find(".text");s.on("mousedown touchstart",function(e){i=!0,o=t.width()-r(this).width()+10,n=e.clientX||e.originalEvent.touches[0].pageX}),r(document.body,s).on("mouseup touchend",function(e){if(i){if(i=!1,(e.clientX||e.changedTouches[0].pageX)-n<o)return a.fadeTo(300,1),void s.animate({left:"-10px"},300);c.cb()}}),r(document.body).on("mousemove touchmove",function(e){var t;i&&(e=1-(t=(e.clientX||e.originalEvent.touches[0].pageX)-n)/o,a.fadeTo(0,e),t<=0?s.css({left:"-10px"}):o+10<=t?s.css({left:o+"px"}):s.css({left:t-10}))})})}}(jQuery);var request={auth:function(e,t){var n={Authorization:"Basic "+btoa("18h8vanvrh4pui1lrntc1niljf:1ge31bhjrdk9d0ja14mft8qepi4clkt805jqb2svqvmb4so1v4g7"),"Content-Type":"application/x-www-form-urlencoded",Cookie:"XSRF-TOKEN=b4a54f1b-afe5-4aee-9a76-00f920418b6e"};request.send("https://omm6oug5pg.execute-api.us-east-1.amazonaws.com/desarrollo/oauth2/v1/token","POST","grant_type=client_credentials",n,e,t)},pay:function(e,t,n,o,i){n=JSON.stringify(n);t.Authorization="Bearer "+e,request.send("https://apigateway.superappbaz.com/integracion/superapp/pagos/captacion/traspasos/v1/boton-pago","POST",n,t,o,i)},send:function(e,t,n,o,i,s){var a,c=new Headers;for(a in o)c.append(a,o[a]);fetch(e,{method:t,headers:c,body:n,redirect:"follow"}).then(function(e){return e.json()}).then(i).catch(s)}};function bind(o){$("[data-id]").each(function(){var e=$(this),t=e.data("id"),n=o[t];"precio"===t?e.html(formatAmount(n)):"saldo"===t?"false"===n&&setTimeout(function(){showAdvice(e,!0)},500):e.html(n)})}function bindFromStr(e){try{bind(JSON.parse(e))}catch(e){console.log(e)}}function changeScreen(e,t){$(".screen").addClass("no-visible"),e.removeClass("no-visible"),t()}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var t=e.target,n=e.keyCode,o=$(t.parentNode);8===n?0<o.prev().length&&((e=o.prev().find("input")).val(""),e.focus()):47<n&&n<58&&""!==t.value&&0<o.next().length&&o.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function fakeRequest(e,t){setTimeout(function(){t("000001"===e)},1500)}function payMovie(e){function t(e){e="object"===_typeof(e)?e.message:e,console.log(JSON.stringify({message:e})),"webkit"in window&&window.webkit.messageHandlers.errorPaymentResponse.postMessage("errorPaymentResponse|"+JSON.stringify(e))}try{var n=JSON.parse(e);request.auth(function(e){"string"==typeof e.access_token?request.pay(e.access_token,n.headers,n.requestBody,function(e){"webkit"in window&&window.webkit.messageHandlers.paymentResponse.postMessage("paymentResponse|"+JSON.stringify(e))},t):t(e)},t)}catch(e){t(e)}}function searchToJson(){for(var e,t=location.search.substring(1).split("&"),n={},o=0;o<t.length;o++)""!==t[o]&&(e=t[o].split("="),n[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return n}function showAdvice(e,t){t?e.addClass("no-visible"):e.removeClass("no-visible")}function showLoader(e){var t=$(".loader");e?(t.length<=0&&(t=$('<div class="loader">')),$("body").append(t),setTimeout(function(){return t.addClass("loader-visible")},10)):(t.removeClass("loader-visible"),setTimeout(function(){return t.remove()},375))}function validateCode(){var t=$(".auth-screen .code"),n=$(".auth-screen .digit input"),e="";n.each(function(){e+=this.value}),6===e.length?(showLoader(!0),fakeRequest(e,function(e){e?(t.addClass("valid"),changeScreen($(".resume-screen"),function(){showLoader(!1)})):(showLoader(!1),t.addClass("invalid"),setTimeout(function(){n.each(function(){$(this).val("")}),n.eq(0).focus()},100))})):t.removeClass("valid invalid")}bind(searchToJson());var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){showLoader(!0),setTimeout(function(){console.log("scripts.js: Open digital sign"),"webkit"in window&&window.webkit.messageHandlers.showDigitalSign.postMessage("showDigitalSign")},500)}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus(),$(".screen header .close-btn").on("click",function(){console.log("scripts.js: Closing WebView"),"webkit"in window&&window.webkit.messageHandlers.closeMoviePayment.postMessage("closeMoviePayment")}),$(".share-btn").on("click",function(){console.log("scripts.js: Sharing ticket"),"webkit"in window&&window.webkit.messageHandlers.shareTicket.postMessage("shareTicket")}),$(".movie-btn").on("click",function(){console.log("scripts.js: Play movie"),"webkit"in window&&window.webkit.messageHandlers.playMovie.postMessage("playMovie")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5zd2lwZS5qcyIsInJlcXVlc3QuanMiLCJzY3JpcHRzLmpzIl0sIm5hbWVzIjpbIiQiLCJmbiIsInN3aXBlIiwib3B0aW9ucyIsInNldHRpbmdzIiwiZXh0ZW5kIiwiY2IiLCJjb25zb2xlIiwibG9nIiwidGhpcyIsImVhY2giLCIkdGhpcyIsImluaXRpYWxNb3VzZSIsInNsaWRlTW92ZW1lbnRUb3RhbCIsIm1vdXNlSXNEb3duIiwiJHNsaWRlciIsImZpbmQiLCIkdGV4dCIsIm9uIiwiZXZlbnQiLCJ3aWR0aCIsImNsaWVudFgiLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsInBhZ2VYIiwiZG9jdW1lbnQiLCJib2R5IiwiY2hhbmdlZFRvdWNoZXMiLCJmYWRlVG8iLCJhbmltYXRlIiwibGVmdCIsInJlbGF0aXZlTW91c2UiLCJzbGlkZVBlcmNlbnQiLCJjc3MiLCJqUXVlcnkiLCJyZXF1ZXN0IiwiYXV0aCIsInN1Y2Nlc3MiLCJlcnJvciIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiYnRvYSIsIkNvbnRlbnQtVHlwZSIsIkNvb2tpZSIsInNlbmQiLCJwYXkiLCJhY2Nlc3NUb2tlbiIsInJhdyIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cmwiLCJtZXRob2QiLCJqc29uSGVhZGVycyIsInByb3AiLCJIZWFkZXJzIiwiYXBwZW5kIiwiZmV0Y2giLCJyZWRpcmVjdCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJiaW5kIiwidmFsdWVzIiwiJHRhZyIsImlkIiwiZGF0YSIsInZhbHVlIiwiaHRtbCIsImZvcm1hdEFtb3VudCIsInNldFRpbWVvdXQiLCJzaG93QWR2aWNlIiwiYmluZEZyb21TdHIiLCJzdHJKc29uIiwicGFyc2UiLCJlcnIiLCJjaGFuZ2VTY3JlZW4iLCIkc2NyZWVuIiwiY2FsbGJhY2siLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiYW1vdW50IiwiTnVtYmVyIiwidG9GaXhlZCIsInJlcGxhY2UiLCJoYW5kbGVEaWdpdEtleXVwIiwiX3JlZiIsInRhcmdldCIsImtleUNvZGUiLCIkcGFyZW50IiwicGFyZW50Tm9kZSIsInByZXYiLCJsZW5ndGgiLCIkaW5wdXQiLCJ2YWwiLCJmb2N1cyIsIm5leHQiLCJ2YWxpZGF0ZUNvZGUiLCJudW1iZXJGaWx0ZXIiLCJ0ZXN0Iiwib2xkVmFsdWUiLCJvbGRTZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwib2xkU2VsZWN0aW9uRW5kIiwic2VsZWN0aW9uRW5kIiwiaGFzT3duUHJvcGVydHkiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImZha2VSZXF1ZXN0IiwiY29kZSIsInBheU1vdmllIiwiaGFuZGxlRXJyIiwibWVzc2FnZSIsIl90eXBlb2YiLCJ3aW5kb3ciLCJ3ZWJraXQiLCJtZXNzYWdlSGFuZGxlcnMiLCJlcnJvclBheW1lbnRSZXNwb25zZSIsInBvc3RNZXNzYWdlIiwiYXV0aFJlcyIsInBheVJlcyIsInBheW1lbnRSZXNwb25zZSIsInNlYXJjaFRvSnNvbiIsInBhcnRzIiwicGFpcnMiLCJsb2NhdGlvbiIsInNlYXJjaCIsInN1YnN0cmluZyIsInNwbGl0Iiwib2JqZWN0IiwiaSIsImRlY29kZVVSSUNvbXBvbmVudCIsIiRlbCIsImZsYWciLCJzaG93TG9hZGVyIiwic2hvdyIsIiRsb2FkZXIiLCJyZW1vdmUiLCIkY29kZSIsIiRkaWdpdHMiLCJlcSIsIiRhZHZpY2VzIiwiJGFkdmljZSIsInNob3dEaWdpdGFsU2lnbiIsImNsb3NlTW92aWVQYXltZW50Iiwic2hhcmVUaWNrZXQiLCJwbGF5TW92aWUiXSwibWFwcGluZ3MiOiIrUEFFQSxTQUFBQSxHQUNBQSxFQUFBQyxHQUFBQyxNQUFBLFNBQUFDLEdBQ0EsSUFBQUMsRUFBQUosRUFBQUssT0FBQSxDQUNBQyxHQUFBLFdBQ0FDLFFBQUFDLElBQUEsZ0JBRUFMLEdBRUEsT0FBQU0sS0FBQUMsS0FBQSxXQUNBLElBQUFDLEVBQUFYLEVBQUFTLE1BQ0FHLEVBQUEsRUFDQUMsRUFBQSxFQUNBQyxHQUFBLEVBQ0FDLEVBQUFK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NUgsS0FBQSxjQUVBRSxHQUFBLFFBQUEsV0FDQW9ELFdBQUFzRSxHQUFBLE9BSUE1SSxFQUFBLDZCQUFBRSxNQUFBLENBQ0FJLEdBQUEsV0FDQThILFlBQUEsR0FFQS9ELFdBQUEsV0FDQTlELFFBQUFDLElBQUEsaUNBRUEsV0FBQXdHLFFBQ0FBLE9BQUFDLE9BQUFDLGdCQUFBMkIsZ0JBQUF6QixZQUFBLG9CQUVBLFFBTUEsSUFBQXFCLFFBQUF6SSxFQUFBLDZCQUVBeUksUUFBQXZILEdBQUEsNENBQUErRSxjQUNBd0MsUUFBQXZILEdBQUEsUUFBQWtFLGtCQUVBcUQsUUFBQUMsR0FBQSxHQUFBNUMsUUFJQTlGLEVBQUEsNkJBQUFrQixHQUFBLFFBQUEsV0FDQVgsUUFBQUMsSUFBQSwrQkFFQSxXQUFBd0csUUFDQUEsT0FBQUMsT0FBQUMsZ0JBQUE0QixrQkFBQTFCLFlBQUEsdUJBTUFwSCxFQUFBLGNBQUFrQixHQUFBLFFBQUEsV0FDQVgsUUFBQUMsSUFBQSw4QkFFQSxXQUFBd0csUUFDQUEsT0FBQUMsT0FBQUMsZ0JBQUE2QixZQUFBM0IsWUFBQSxpQkFNQXBILEVBQUEsY0FBQWtCLEdBQUEsUUFBQSxXQUNBWCxRQUFBQyxJQUFBLDBCQUVBLFdBQUF3RyxRQUNBQSxPQUFBQyxPQUFBQyxnQkFBQThCLFVBQUE1QixZQUFBIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVmZXJlbmNlOiBodHRwczovL2NvZGVwZW4uaW8vZ3ByZXNzdXR0bzUvcGVuL05qSm9iRz9lZGl0b3JzPTAwMTBcclxuXHJcbihmdW5jdGlvbiAoJCkge1xyXG4gICAgJC5mbi5zd2lwZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIHNldHRpbmdzID0gJC5leHRlbmQoe1xyXG4gICAgICAgICAgICBjYjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3dpcGUgZG9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICB2YXIgaW5pdGlhbE1vdXNlID0gMDtcclxuICAgICAgICAgICAgdmFyIHNsaWRlTW92ZW1lbnRUb3RhbCA9IDA7XHJcbiAgICAgICAgICAgIHZhciBtb3VzZUlzRG93biA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgJHNsaWRlciA9ICR0aGlzLmZpbmQoJy5zbGlkZXInKTtcclxuICAgICAgICAgICAgdmFyICR0ZXh0ID0gJHRoaXMuZmluZCgnLnRleHQnKTtcclxuXHJcbiAgICAgICAgICAgICRzbGlkZXIub24oJ21vdXNlZG93biB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBtb3VzZUlzRG93biA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBzbGlkZU1vdmVtZW50VG90YWwgPSAkdGhpcy53aWR0aCgpIC0gJCh0aGlzKS53aWR0aCgpICsgMTA7XHJcbiAgICAgICAgICAgICAgICBpbml0aWFsTW91c2UgPSBldmVudC5jbGllbnRYIHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKGRvY3VtZW50LmJvZHksICRzbGlkZXIpLm9uKCdtb3VzZXVwIHRvdWNoZW5kJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW1vdXNlSXNEb3duKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIG1vdXNlSXNEb3duID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudE1vdXNlID0gZXZlbnQuY2xpZW50WCB8fCBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgICAgIHZhciByZWxhdGl2ZU1vdXNlID0gY3VycmVudE1vdXNlIC0gaW5pdGlhbE1vdXNlO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChyZWxhdGl2ZU1vdXNlIDwgc2xpZGVNb3ZlbWVudFRvdGFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRleHQuZmFkZVRvKDMwMCwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogXCItMTBweFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLyogJHNsaWRlci5hZGRDbGFzcygndW5sb2NrZWQnKTtcclxuICAgICAgICAgICAgICAgICQoJyNsb2NrZXInKS50ZXh0KCdsb2NrX291dGxpbmUnKTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzbGlkZXIub24oJ2NsaWNrIHRhcCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISRzbGlkZXIuaGFzQ2xhc3MoJ3VubG9ja2VkJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzbGlkZXIucmVtb3ZlQ2xhc3MoJ3VubG9ja2VkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNsb2NrZXInKS50ZXh0KCdsb2NrX29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5vZmYoJ2NsaWNrIHRhcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSwgMCk7ICovXHJcblxyXG4gICAgICAgICAgICAgICAgc2V0dGluZ3MuY2IoKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoZG9jdW1lbnQuYm9keSkub24oJ21vdXNlbW92ZSB0b3VjaG1vdmUnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICghbW91c2VJc0Rvd24pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50TW91c2UgPSBldmVudC5jbGllbnRYIHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgICAgIHZhciByZWxhdGl2ZU1vdXNlID0gY3VycmVudE1vdXNlIC0gaW5pdGlhbE1vdXNlO1xyXG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlUGVyY2VudCA9IDEgLSAocmVsYXRpdmVNb3VzZSAvIHNsaWRlTW92ZW1lbnRUb3RhbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJHRleHQuZmFkZVRvKDAsIHNsaWRlUGVyY2VudCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlTW91c2UgPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzbGlkZXIuY3NzKHsgJ2xlZnQnOiAnLTEwcHgnIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChyZWxhdGl2ZU1vdXNlID49IHNsaWRlTW92ZW1lbnRUb3RhbCArIDEwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5jc3MoeyAnbGVmdCc6IHNsaWRlTW92ZW1lbnRUb3RhbCArICdweCcgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJHNsaWRlci5jc3MoeyAnbGVmdCc6IHJlbGF0aXZlTW91c2UgLSAxMCB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pKGpRdWVyeSk7XHJcbiIsImNvbnN0IHJlcXVlc3QgPSB7XHJcbiAgICAvKipcclxuICAgICAqIEF1dGhlbnRpY2F0ZS5cclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IHN1Y2Nlc3NcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGVycm9yXHJcbiAgICAgKi9cclxuICAgIGF1dGg6IGZ1bmN0aW9uIChzdWNjZXNzLCBlcnJvcikge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IFwiaHR0cHM6Ly9vbW02b3VnNXBnLmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2Rlc2Fycm9sbG8vb2F1dGgyL3YxL3Rva2VuXCI7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHtcclxuICAgICAgICAgICAgXCJBdXRob3JpemF0aW9uXCI6IFwiQmFzaWMgXCIgKyBidG9hKFwiMThoOHZhbnZyaDRwdWkxbHJudGMxbmlsamZcIiArIFwiOlwiICsgXCIxZ2UzMWJoanJkazlkMGphMTRtZnQ4cWVwaTRjbGt0ODA1anFiMnN2cXZtYjRzbzF2NGc3XCIpLFxyXG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxyXG4gICAgICAgICAgICBcIkNvb2tpZVwiOiBcIlhTUkYtVE9LRU49YjRhNTRmMWItYWZlNS00YWVlLTlhNzYtMDBmOTIwNDE4YjZlXCJcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGJvZHkgPSBcImdyYW50X3R5cGU9Y2xpZW50X2NyZWRlbnRpYWxzXCI7XHJcblxyXG4gICAgICAgIHJlcXVlc3Quc2VuZCh1cmwsICdQT1NUJywgYm9keSwgaGVhZGVycywgc3VjY2VzcywgZXJyb3IpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBheS5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY2Nlc3NUb2tlblxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGhlYWRlcnNcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBib2R5XHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBzdWNjZXNzXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBlcnJvclxyXG4gICAgICovXHJcbiAgICBwYXk6IGZ1bmN0aW9uIChhY2Nlc3NUb2tlbiwgaGVhZGVycywgYm9keSwgc3VjY2VzcywgZXJyb3IpIHtcclxuICAgICAgICBjb25zdCB1cmwgPSBcImh0dHBzOi8vYXBpZ2F0ZXdheS5zdXBlcmFwcGJhei5jb20vaW50ZWdyYWNpb24vc3VwZXJhcHAvcGFnb3MvY2FwdGFjaW9uL3RyYXNwYXNvcy92MS9ib3Rvbi1wYWdvXCI7XHJcbiAgICAgICAgY29uc3QgcmF3ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XHJcblxyXG4gICAgICAgIGhlYWRlcnNbXCJBdXRob3JpemF0aW9uXCJdID0gXCJCZWFyZXIgXCIgKyBhY2Nlc3NUb2tlbjtcclxuICAgICAgICByZXF1ZXN0LnNlbmQodXJsLCAnUE9TVCcsIHJhdywgaGVhZGVycywgc3VjY2VzcywgZXJyb3IpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIE1ha2UgcmVxdWVzdC5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gYm9keVxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGpzb25IZWFkZXJzIFxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gc3VjY2VzcyBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGVycm9yXHJcbiAgICAgKi9cclxuICAgIHNlbmQ6IGZ1bmN0aW9uICh1cmwsIG1ldGhvZCwgYm9keSwganNvbkhlYWRlcnMsIHN1Y2Nlc3MsIGVycm9yKSB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcblxyXG4gICAgICAgIGZvciAobGV0IHByb3AgaW4ganNvbkhlYWRlcnMpIHtcclxuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQocHJvcCwganNvbkhlYWRlcnNbcHJvcF0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZmV0Y2godXJsLCB7IG1ldGhvZCwgaGVhZGVycywgYm9keSwgcmVkaXJlY3Q6ICdmb2xsb3cnIH0pXHJcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgICAgICAgLnRoZW4oc3VjY2VzcylcclxuICAgICAgICAgICAgLmNhdGNoKGVycm9yKTtcclxuICAgIH1cclxufTsiLCIvKipcclxuICogQmluZCBKU09OIHRvIEhUTUwuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXNcclxuICovXHJcbmZ1bmN0aW9uIGJpbmQodmFsdWVzKSB7XHJcbiAgICBjb25zdCAkdGFncyA9ICQoJ1tkYXRhLWlkXScpO1xyXG5cclxuICAgICR0YWdzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnN0ICR0YWcgPSAkKHRoaXMpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gJHRhZy5kYXRhKCdpZCcpO1xyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2lkXTtcclxuXHJcbiAgICAgICAgaWYgKGlkID09PSAncHJlY2lvJykge1xyXG4gICAgICAgICAgICAkdGFnLmh0bWwoZm9ybWF0QW1vdW50KHZhbHVlKSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpZCA9PT0gJ3NhbGRvJykge1xyXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09ICdmYWxzZScpIHtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4geyBzaG93QWR2aWNlKCR0YWcsIHRydWUpOyB9LCA1MDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHRhZy5odG1sKHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIHN0cmluZyB0byBvYmplY3QgYW5kIHRoZW4gYmluZC5cclxuICogQHBhcmFtIHtzdHJpbmd9IHN0ckpzb24gXHJcbiAqL1xyXG5mdW5jdGlvbiBiaW5kRnJvbVN0cihzdHJKc29uKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKHN0ckpzb24pO1xyXG4gICAgICAgIGJpbmQoanNvbik7XHJcbiAgICB9IGNhdGNoIChlcnIpIHsgY29uc29sZS5sb2coZXJyKTsgfVxyXG59XHJcblxyXG4vKipcclxuICogQ2hhbmdlIHNjcmVlbi5cclxuICogQHBhcmFtIHtqUXVlcnl9ICRzY3JlZW5cclxuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcclxuICovXHJcbmZ1bmN0aW9uIGNoYW5nZVNjcmVlbigkc2NyZWVuLCBjYWxsYmFjaykge1xyXG4gICAgJCgnLnNjcmVlbicpLmFkZENsYXNzKCduby12aXNpYmxlJyk7XHJcbiAgICAkc2NyZWVuLnJlbW92ZUNsYXNzKCduby12aXNpYmxlJyk7XHJcblxyXG4gICAgY2FsbGJhY2soKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCBhbW91bnQgd2l0aCBjdXJyZW5jeSBmb3JtYXQuXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBhbW91bnQgXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBmb3JtYXRBbW91bnQoYW1vdW50KSB7XHJcbiAgICByZXR1cm4gJyQgJyArIE51bWJlcihhbW91bnQpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgJywnKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhhbmRsZSBkaWdpdCBrZXl1cCBldmVudC5cclxuICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudFxyXG4gKi9cclxuZnVuY3Rpb24gaGFuZGxlRGlnaXRLZXl1cCh7IHRhcmdldCwga2V5Q29kZSB9KSB7XHJcbiAgICBjb25zdCAkcGFyZW50ID0gJCh0YXJnZXQucGFyZW50Tm9kZSk7XHJcblxyXG4gICAgaWYgKGtleUNvZGUgPT09IDgpIHtcclxuICAgICAgICBpZiAoJHBhcmVudC5wcmV2KCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBjb25zdCAkaW5wdXQgPSAkcGFyZW50LnByZXYoKS5maW5kKCdpbnB1dCcpO1xyXG5cclxuICAgICAgICAgICAgJGlucHV0LnZhbCgnJyk7XHJcbiAgICAgICAgICAgICRpbnB1dC5mb2N1cygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9IGVsc2UgaWYgKGtleUNvZGUgPiA0NyAmJiBrZXlDb2RlIDwgNTgpIHtcclxuICAgICAgICBpZiAodGFyZ2V0LnZhbHVlICE9PSAnJykge1xyXG4gICAgICAgICAgICBpZiAoJHBhcmVudC5uZXh0KCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgJGlucHV0ID0gJHBhcmVudC5uZXh0KCkuZmluZCgnaW5wdXQnKTtcclxuICAgICAgICAgICAgICAgICRpbnB1dC5mb2N1cygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhbGlkYXRlQ29kZSgpO1xyXG59XHJcblxyXG4vKipcclxuICogQXBwbHkgbnVtYmVyIGZpbHRlci5cclxuICogQHBhcmFtIHtFdmVudH0gZXZlbnRcclxuICovXHJcbmZ1bmN0aW9uIG51bWJlckZpbHRlcihldmVudCkge1xyXG4gICAgY29uc3QgZmlsdGVyID0gL15cXGR7MCwxfSQvO1xyXG5cclxuICAgIGlmIChmaWx0ZXIudGVzdCh0aGlzLnZhbHVlKSkge1xyXG4gICAgICAgIHRoaXMub2xkVmFsdWUgPSB0aGlzLnZhbHVlO1xyXG4gICAgICAgIHRoaXMub2xkU2VsZWN0aW9uU3RhcnQgPSB0aGlzLnNlbGVjdGlvblN0YXJ0O1xyXG4gICAgICAgIHRoaXMub2xkU2VsZWN0aW9uRW5kID0gdGhpcy5zZWxlY3Rpb25FbmQ7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoJ29sZFZhbHVlJykpIHtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5vbGRWYWx1ZTtcclxuICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKHRoaXMub2xkU2VsZWN0aW9uU3RhcnQsIHRoaXMub2xkU2VsZWN0aW9uRW5kKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogRG8gZmFrZSByZXF1ZXN0LlxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xyXG4gKi9cclxuZnVuY3Rpb24gZmFrZVJlcXVlc3QoY29kZSwgY2FsbGJhY2spIHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGNhbGxiYWNrKGNvZGUgPT09ICcwMDAwMDEnKTtcclxuICAgIH0sIDE1MDApO1xyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IHN0ckpzb25cclxuICovXHJcbmZ1bmN0aW9uIHBheU1vdmllKHN0ckpzb24pIHtcclxuICAgIGNvbnN0IGhhbmRsZUVyciA9IGVyciA9PiB7XHJcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHR5cGVvZiBlcnIgPT09ICdvYmplY3QnID8gZXJyLm1lc3NhZ2UgOiBlcnI7XHJcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoeyBtZXNzYWdlIH0pKTtcclxuICAgICAgICBpZiAoJ3dlYmtpdCcgaW4gd2luZG93KSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLmVycm9yUGF5bWVudFJlc3BvbnNlLnBvc3RNZXNzYWdlKFwiZXJyb3JQYXltZW50UmVzcG9uc2V8XCIgKyBKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2Uoc3RySnNvbik7XHJcblxyXG4gICAgICAgIHJlcXVlc3QuYXV0aChmdW5jdGlvbiAoYXV0aFJlcykge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGF1dGhSZXNbJ2FjY2Vzc190b2tlbiddID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5wYXkoYXV0aFJlc1snYWNjZXNzX3Rva2VuJ10sIGpzb25bJ2hlYWRlcnMnXSwganNvblsncmVxdWVzdEJvZHknXSwgZnVuY3Rpb24gKHBheVJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgnd2Via2l0JyBpbiB3aW5kb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMucGF5bWVudFJlc3BvbnNlLnBvc3RNZXNzYWdlKFwicGF5bWVudFJlc3BvbnNlfFwiICsgSlNPTi5zdHJpbmdpZnkocGF5UmVzKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSwgaGFuZGxlRXJyKTtcclxuICAgICAgICAgICAgfSBlbHNlIHsgaGFuZGxlRXJyKGF1dGhSZXMpOyB9XHJcbiAgICAgICAgfSwgaGFuZGxlRXJyKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnIpIHsgaGFuZGxlRXJyKGVycik7IH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIGxvY2F0aW9uLnNlYXJjaCB0byBKU09OLlxyXG4gKiBAcmV0dXJucyBvYmplY3RcclxuICovXHJcbmZ1bmN0aW9uIHNlYXJjaFRvSnNvbigpIHtcclxuICAgIGNvbnN0IHBhaXJzID0gbG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKS5zcGxpdCgnJicpO1xyXG4gICAgY29uc3Qgb2JqZWN0ID0ge307XHJcbiAgICBsZXQgaSA9IDA7XHJcblxyXG4gICAgZm9yICg7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChwYWlyc1tpXSA9PT0gJycpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBwYXJ0cyA9IHBhaXJzW2ldLnNwbGl0KCc9Jyk7XHJcbiAgICAgICAgb2JqZWN0W2RlY29kZVVSSUNvbXBvbmVudChwYXJ0c1swXSldID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzFdKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gb2JqZWN0O1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyBvciBoaWRlIGFkdmljZS5cclxuICogQHBhcmFtIHtqUXVlcnl9ICRlbCBcclxuICogQHBhcmFtIHtib29sZWFufSBmbGFnIFxyXG4gKi9cclxuZnVuY3Rpb24gc2hvd0FkdmljZSgkZWwsIGZsYWcpIHtcclxuICAgIGlmIChmbGFnKSB7XHJcbiAgICAgICAgJGVsLmFkZENsYXNzKCduby12aXNpYmxlJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICRlbC5yZW1vdmVDbGFzcygnbm8tdmlzaWJsZScpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogU2hvdyBvciBoaWRlIGxvYWRlci5cclxuICogQHBhcmFtIHtib29sZWFufSBzaG93XHJcbiAqL1xyXG5mdW5jdGlvbiBzaG93TG9hZGVyKHNob3cpIHtcclxuICAgIGxldCAkbG9hZGVyID0gJCgnLmxvYWRlcicpO1xyXG5cclxuICAgIGlmIChzaG93KSB7XHJcbiAgICAgICAgaWYgKCRsb2FkZXIubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgICAgJGxvYWRlciA9ICQoJzxkaXYgY2xhc3M9XCJsb2FkZXJcIj4nKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQoJ2JvZHknKS5hcHBlbmQoJGxvYWRlcik7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiAkbG9hZGVyLmFkZENsYXNzKCdsb2FkZXItdmlzaWJsZScpLCAxMCk7XHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkbG9hZGVyLnJlbW92ZUNsYXNzKCdsb2FkZXItdmlzaWJsZScpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gJGxvYWRlci5yZW1vdmUoKSwgMzc1KTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWYWxpZGF0ZSBjb2RlIGZyb20gY2xpZW50LlxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlQ29kZSgpIHtcclxuICAgIGNvbnN0ICRjb2RlID0gJCgnLmF1dGgtc2NyZWVuIC5jb2RlJyk7XHJcbiAgICBjb25zdCAkZGlnaXRzID0gJCgnLmF1dGgtc2NyZWVuIC5kaWdpdCBpbnB1dCcpO1xyXG4gICAgbGV0IGNvZGUgPSBcIlwiO1xyXG5cclxuICAgICRkaWdpdHMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29kZSArPSB0aGlzLnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKGNvZGUubGVuZ3RoID09PSA2KSB7XHJcbiAgICAgICAgc2hvd0xvYWRlcih0cnVlKTtcclxuXHJcbiAgICAgICAgZmFrZVJlcXVlc3QoY29kZSwgc3VjY2VzcyA9PiB7XHJcbiAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAkY29kZS5hZGRDbGFzcygndmFsaWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VTY3JlZW4oJCgnLnJlc3VtZS1zY3JlZW4nKSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dMb2FkZXIoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzaG93TG9hZGVyKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICRjb2RlLmFkZENsYXNzKCdpbnZhbGlkJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJGRpZ2l0cy5lYWNoKGZ1bmN0aW9uICgpIHsgJCh0aGlzKS52YWwoJycpOyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAkZGlnaXRzLmVxKDApLmZvY3VzKCk7XHJcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICRjb2RlLnJlbW92ZUNsYXNzKCd2YWxpZCBpbnZhbGlkJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vLyBJbml0aWFsaXplIERldGFpbCBTY3JlZW4gY29tcG9uZW50cy5cclxuYmluZChzZWFyY2hUb0pzb24oKSk7XHJcblxyXG5jb25zdCAkYWR2aWNlcyA9ICQoJy5hZHZpY2UuZml4ZWQnKTtcclxuXHJcbiRhZHZpY2VzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3QgJGFkdmljZSA9ICQodGhpcyk7XHJcbiAgICBjb25zdCAkY2xvc2VCdG4gPSAkYWR2aWNlLmZpbmQoJy5jbG9zZS1idG4nKTtcclxuXHJcbiAgICAkY2xvc2VCdG4ub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNob3dBZHZpY2UoJGFkdmljZSwgZmFsc2UpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuJCgnLmRldGFpbC1zY3JlZW4gLnN3aXBlLWJ0bicpLnN3aXBlKHtcclxuICAgIGNiOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2hvd0xvYWRlcih0cnVlKTtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzY3JpcHRzLmpzOiBPcGVuIGRpZ2l0YWwgc2lnbicpXHJcblxyXG4gICAgICAgICAgICBpZiAoJ3dlYmtpdCcgaW4gd2luZG93KSB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5zaG93RGlnaXRhbFNpZ24ucG9zdE1lc3NhZ2UoXCJzaG93RGlnaXRhbFNpZ25cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCA1MDApO1xyXG4gICAgfVxyXG59KTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIEF1dGggU2NyZWVuIGNvbXBvbmVudHMuXHJcbmNvbnN0ICRkaWdpdHMgPSAkKCcuYXV0aC1zY3JlZW4gLmRpZ2l0IGlucHV0Jyk7XHJcblxyXG4kZGlnaXRzLm9uKCdrZXlwcmVzcyBrZXlkb3duIGtleXVwIGlucHV0IGNoYW5nZSBwYXN0ZScsIG51bWJlckZpbHRlcilcclxuJGRpZ2l0cy5vbigna2V5dXAnLCBoYW5kbGVEaWdpdEtleXVwKTtcclxuXHJcbiRkaWdpdHMuZXEoMCkuZm9jdXMoKTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIGNsb3NlIGJ1dHRvbnMuXHJcbiQoJy5zY3JlZW4gaGVhZGVyIC5jbG9zZS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnc2NyaXB0cy5qczogQ2xvc2luZyBXZWJWaWV3Jyk7XHJcblxyXG4gICAgaWYgKCd3ZWJraXQnIGluIHdpbmRvdykge1xyXG4gICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLmNsb3NlTW92aWVQYXltZW50LnBvc3RNZXNzYWdlKFwiY2xvc2VNb3ZpZVBheW1lbnRcIik7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbi8vIEluaXRpYWxpemUgc2hhcmUgYnV0dG9uLlxyXG4kKCcuc2hhcmUtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IFNoYXJpbmcgdGlja2V0Jyk7XHJcblxyXG4gICAgaWYgKCd3ZWJraXQnIGluIHdpbmRvdykge1xyXG4gICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnNoYXJlVGlja2V0LnBvc3RNZXNzYWdlKFwic2hhcmVUaWNrZXRcIik7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbi8vIEluaXRpYWxpemUgbW92aWUgYnV0dG9uLlxyXG4kKCcubW92aWUtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IFBsYXkgbW92aWUnKTtcclxuXHJcbiAgICBpZiAoJ3dlYmtpdCcgaW4gd2luZG93KSB7XHJcbiAgICAgICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMucGxheU1vdmllLnBvc3RNZXNzYWdlKFwicGxheU1vdmllXCIpO1xyXG4gICAgfVxyXG59KTtcclxuIl19

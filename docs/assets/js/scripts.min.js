"use strict";!function(c){c.fn.swipe=function(e){var r=c.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var n=c(this),o=0,t=0,s=!1,i=n.find(".slider"),a=n.find(".text");i.on("mousedown touchstart",function(e){s=!0,t=n.width()-c(this).width()+10,o=e.clientX||e.originalEvent.touches[0].pageX}),c(document.body,i).on("mouseup touchend",function(e){if(s){if(s=!1,(e.clientX||e.changedTouches[0].pageX)-o<t)return a.fadeTo(300,1),void i.animate({left:"-10px"},300);r.cb()}}),c(document.body).on("mousemove touchmove",function(e){var n;s&&(e=1-(n=(e.clientX||e.originalEvent.touches[0].pageX)-o)/t,a.fadeTo(0,e),n<=0?i.css({left:"-10px"}):t+10<=n?i.css({left:t+"px"}):i.css({left:n-10}))})})}}(jQuery);var request={auth:function(e,n){var o={Authorization:"Basic "+btoa("18h8vanvrh4pui1lrntc1niljf:1ge31bhjrdk9d0ja14mft8qepi4clkt805jqb2svqvmb4so1v4g7"),"Content-Type":"application/x-www-form-urlencoded",Cookie:"XSRF-TOKEN=b4a54f1b-afe5-4aee-9a76-00f920418b6e"};request.send("https://omm6oug5pg.execute-api.us-east-1.amazonaws.com/desarrollo/oauth2/v1/token","POST","grant_type=client_credentials",o,e,n)},pay:function(e,n,o,t,s,i){t=t?"https://api.appbazgs.com/superapp/pagos/captacion/traspasos/v1/boton-pago":"https://apigateway.superappbaz.com/integracion/superapp/pagos/captacion/traspasos/v1/boton-pago",o=JSON.stringify(o);request.send(t,"POST",o,n,s,i)},send:function(e,n,o,t,s,i){var a,r=new Headers;for(a in t)r.append(a,t[a]);fetch(e,{method:n,headers:r,body:o,redirect:"follow"}).then(function(e){return e.json()}).then(s).catch(i)}},environment=!1;function bind(t){$("[data-id]").each(function(){var e=$(this),n=e.data("id"),o=t[n];"precio"===n?e.html(formatAmount(o)):"saldo"===n?"false"===o&&setTimeout(function(){showAdvice(e,!0)},500):e.html(o)})}function bindFromStr(e){try{bind(JSON.parse(e))}catch(e){console.log(e)}}function changeScreen(e,n){$(".screen").addClass("no-visible"),e.removeClass("no-visible"),n()}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var n=e.target,o=e.keyCode,t=$(n.parentNode);8===o?0<t.prev().length&&((e=t.prev().find("input")).val(""),e.focus()):47<o&&o<58&&""!==n.value&&0<t.next().length&&t.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function fakeRequest(e,n){setTimeout(function(){n("000001"===e)},1500)}function payMovie(e){function n(e){console.log(JSON.stringify(e)),window.webkit.messageHandlers.errorPaymentResponse.postMessage("errorPaymentResponse|"+JSON.stringify(e))}try{var o=JSON.parse(e);window.webkit.messageHandlers.showLoader.postMessage("showLoader"),request.pay("",o.headers,o.requestBody,environment,function(e){"201"==e.codigo?window.webkit.messageHandlers.paymentResponse.postMessage("paymentResponse|"+JSON.stringify({error:{code:0,data:e}})):n({error:{code:e.codigo,message:e.mensaje}}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")},function(e){n({error:{code:500,message:e.message}}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")})}catch(e){n(e)}}function searchToJson(){for(var e,n=location.search.substring(1).split("&"),o={},t=0;t<n.length;t++)""!==n[t]&&(e=n[t].split("="),o[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return o}function showAdvice(e,n){n?e.addClass("no-visible"):e.removeClass("no-visible")}function showLoader(e){var n=$(".loader");e?(n.length<=0&&(n=$('<div class="loader">')),$("body").append(n),setTimeout(function(){return n.addClass("loader-visible")},10)):(n.removeClass("loader-visible"),setTimeout(function(){return n.remove()},375))}function validateCode(){var n=$(".auth-screen .code"),o=$(".auth-screen .digit input"),e="";o.each(function(){e+=this.value}),6===e.length?(showLoader(!0),fakeRequest(e,function(e){e?(n.addClass("valid"),changeScreen($(".resume-screen"),function(){showLoader(!1)})):(showLoader(!1),n.addClass("invalid"),setTimeout(function(){o.each(function(){$(this).val("")}),o.eq(0).focus()},100))})):n.removeClass("valid invalid")}var searchJson=searchToJson(),environment="true"===searchJson.environment;bind(searchJson);var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){showLoader(!0),setTimeout(function(){console.log("scripts.js: Open digital sign"),window.webkit.messageHandlers.showDigitalSign.postMessage("showDigitalSign")},500)}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus(),$(".screen header .close-btn").on("click",function(){console.log("scripts.js: Closing WebView"),window.webkit.messageHandlers.closeMoviePayment.postMessage("closeMoviePayment")}),$(".share-btn").on("click",function(){console.log("scripts.js: Sharing ticket"),window.webkit.messageHandlers.shareTicket.postMessage("shareTicket")}),$(".movie-btn").on("click",function(){console.log("scripts.js: Play movie"),window.webkit.messageHandlers.playMovie.postMessage("playMovie")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

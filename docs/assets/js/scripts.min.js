"use strict";function bind(i){$("[data-id]").each(function(){var e=$(this),t=e.data("id"),n=i[t];"precio"===t?e.html(formatAmount(n)):"saldo"===t?"false"===n&&setTimeout(function(){showAdvice(e,!0)},500):e.html(n)})}function changeScreen(e){console.log("change screen")}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var t=e.target,n=e.keyCode,i=$(t.parentNode);8===n?0<i.prev().length&&((e=i.prev().find("input")).val(""),e.focus()):47<n&&n<58&&""!==t.value&&0<i.next().length&&i.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function request(e,t,n,i,o){$.ajax({url:"https://omm6oug5pg.execute-api.us-east-1.amazonaws.com/desarrollo/oauth2/v1/token",method:"POST",body:{grant_type:"client_credentials"},beforeSend:function(e){e.setRequestHeader("Authorization","Basic "+btoa("18h8vanvrh4pui1lrntc1niljf:1ge31bhjrdk9d0ja14mft8qepi4clkt805jqb2svqvmb4so1v4g7"))},success:function(){console.log(arguments)}})}function searchToJson(){for(var e,t=location.search.substring(1).split("&"),n={},i=0;i<t.length;i++)""!==t[i]&&(e=t[i].split("="),n[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return n}function showAdvice(e,t){t?e.addClass("no-visible"):e.removeClass("no-visible")}function validateCode(){var e=$(".auth-screen .code"),t=$(".auth-screen .digit input"),n="";t.each(function(){n+=this.value}),6===n.length?("000001"===n?e.addClass("valid"):e.addClass("invalid"),setTimeout(function(){t.each(function(){$(this).val("")}),t.eq(0).focus()},1e3)):e.removeClass("valid invalid")}!function(u){u.fn.swipe=function(e){var c=u.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var t=u(this),n=0,i=0,o=!1,s=t.find(".slider"),a=t.find(".text");s.on("mousedown touchstart",function(e){o=!0,i=t.width()-u(this).width()+10,n=e.clientX||e.originalEvent.touches[0].pageX}),u(document.body,s).on("mouseup touchend",function(e){if(o){if(o=!1,(e.clientX||e.changedTouches[0].pageX)-n<i)return a.fadeTo(300,1),void s.animate({left:"-10px"},300);c.cb()}}),u(document.body).on("mousemove touchmove",function(e){var t;o&&(e=1-(t=(e.clientX||e.originalEvent.touches[0].pageX)-n)/i,a.fadeTo(0,e),t<=0?s.css({left:"-10px"}):i+10<=t?s.css({left:i+"px"}):s.css({left:t-10}))})})}}(jQuery),bind(searchToJson());var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){changeScreen($(".auth-screen"))}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

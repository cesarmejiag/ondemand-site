"use strict";!function(c){c.fn.swipe=function(e){var r=c.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var o=c(this),s=0,n=0,t=!1,i=o.find(".slider"),a=o.find(".text");i.on("mousedown touchstart",function(e){t=!0,n=o.width()-c(this).width()+10,s=e.clientX||e.originalEvent.touches[0].pageX}),c(document.body,i).on("mouseup touchend",function(e){if(t){if(t=!1,(e.clientX||e.changedTouches[0].pageX)-s<n)return a.fadeTo(300,1),void i.animate({left:"-10px"},300);r.cb()}}),c(document.body).on("mousemove touchmove",function(e){var o;t&&(e=1-(o=(e.clientX||e.originalEvent.touches[0].pageX)-s)/n,a.fadeTo(0,e),o<=0?i.css({left:"-10px"}):n+10<=o?i.css({left:n+"px"}):i.css({left:o-10}))})})}}(jQuery);var request={auth:function(e,o){var s={Authorization:"Basic "+btoa("18h8vanvrh4pui1lrntc1niljf:1ge31bhjrdk9d0ja14mft8qepi4clkt805jqb2svqvmb4so1v4g7"),"Content-Type":"application/x-www-form-urlencoded",Cookie:"XSRF-TOKEN=b4a54f1b-afe5-4aee-9a76-00f920418b6e"};request.send("https://omm6oug5pg.execute-api.us-east-1.amazonaws.com/desarrollo/oauth2/v1/token","POST","grant_type=client_credentials",s,e,o)},pay:function(e,o,s,n,t){s=s?"https://api.bazappgs.com/superapp/pagos/captacion/traspasos/v1/boton-pago":"https://apigateway.superappbaz.com/integracion/superapp/pagos/captacion/traspasos/v1/boton-pago",o=JSON.stringify(o);request.send(s,"POST",o,e,n,t)},send:function(e,o,s,n,t,i){$.ajax({url:e,method:o,contentType:"application/json",processData:!1,headers:n,data:s,success:t,error:i})}},environment=!1;function bind(n){$("[data-id]").each(function(){var e=$(this),o=e.data("id"),s=n[o];"precio"===o?e.html(formatAmount(s)):"saldo"===o?"false"===s&&setTimeout(function(){showAdvice(e,!0)},500):e.html(s)})}function bindFromStr(e){try{bind(JSON.parse(e))}catch(e){console.log(e)}}function changeScreen(e,o){$(".screen").addClass("no-visible"),e.removeClass("no-visible"),o()}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var o=e.target,s=e.keyCode,n=$(o.parentNode);8===s?0<n.prev().length&&((e=n.prev().find("input")).val(""),e.focus()):47<s&&s<58&&""!==o.value&&0<n.next().length&&n.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function fakeRequest(e,o){setTimeout(function(){o("000001"===e)},1500)}function payMovie(e){function n(e){console.log(JSON.stringify(e)),window.webkit.messageHandlers.errorPaymentResponse.postMessage("errorPaymentResponse|"+JSON.stringify(e))}window.webkit.messageHandlers.showLoader.postMessage("showLoader");try{var o=JSON.parse(e);request.pay(o.headers,o.requestBody,environment,function(e){"201"==e.codigo?window.webkit.messageHandlers.paymentResponse.postMessage("paymentResponse|"+JSON.stringify({error:{code:0,data:e}})):n({error:{code:e.codigo,message:e.mensaje},weberror:900,weberrormessage:"El error lo envío el servicio"}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")},function(e,o,s){n({error:{code:500,message:s},weberror:901,weberrormessage:s}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")})}catch(e){n({error:{code:500,message:e.message},weberror:902,weberrormessage:"Error al hacer la petición"}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")}}function searchToJson(){for(var e,o=location.search.substring(1).split("&"),s={},n=0;n<o.length;n++)""!==o[n]&&(e=o[n].split("="),s[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return s}function showAdvice(e,o){o?e.addClass("no-visible"):e.removeClass("no-visible")}function showLoader(e){var o=$(".loader");e?(o.length<=0&&(o=$('<div class="loader">')),$("body").append(o),setTimeout(function(){return o.addClass("loader-visible")},10)):(o.removeClass("loader-visible"),setTimeout(function(){return o.remove()},375))}function validateCode(){var o=$(".auth-screen .code"),s=$(".auth-screen .digit input"),e="";s.each(function(){e+=this.value}),6===e.length?(showLoader(!0),fakeRequest(e,function(e){e?(o.addClass("valid"),changeScreen($(".resume-screen"),function(){showLoader(!1)})):(showLoader(!1),o.addClass("invalid"),setTimeout(function(){s.each(function(){$(this).val("")}),s.eq(0).focus()},100))})):o.removeClass("valid invalid")}var searchJson=searchToJson(),environment="true"===searchJson.environment;console.log(searchJson);var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){showLoader(!0),setTimeout(function(){console.log("scripts.js: Open digital sign"),window.webkit.messageHandlers.showDigitalSign.postMessage("showDigitalSign")},500)}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus(),$(".screen header .close-btn").on("click",function(){console.log("scripts.js: Closing WebView"),window.webkit.messageHandlers.closeMoviePayment.postMessage("closeMoviePayment")}),$(".share-btn").on("click",function(){console.log("scripts.js: Sharing ticket"),window.webkit.messageHandlers.shareTicket.postMessage("shareTicket")}),$(".movie-btn").on("click",function(){console.log("scripts.js: Play movie"),window.webkit.messageHandlers.playMovie.postMessage("playMovie")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function ownKeys(o,e){var t,n=Object.keys(o);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(o),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable})),n.push.apply(n,t)),n}function _objectSpread(o){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(t),!0).forEach(function(e){_defineProperty(o,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(t,e))})}return o}function _defineProperty(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}!function(r){r.fn.swipe=function(e){var c=r.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var o=r(this),t=0,n=0,i=!1,a=o.find(".slider"),s=o.find(".text");a.on("mousedown touchstart",function(e){i=!0,n=o.width()-r(this).width()+10,t=e.clientX||e.originalEvent.touches[0].pageX}),r(document.body,a).on("mouseup touchend",function(e){if(i){if(i=!1,(e.clientX||e.changedTouches[0].pageX)-t<n)return s.fadeTo(300,1),void a.animate({left:"-10px"},300);c.cb()}}),r(document.body).on("mousemove touchmove",function(e){var o;i&&(e=1-(o=(e.clientX||e.originalEvent.touches[0].pageX)-t)/n,s.fadeTo(0,e),o<=0?a.css({left:"-10px"}):n+10<=o?a.css({left:n+"px"}):a.css({left:o-10}))})})}}(jQuery);var globalIdPelicula,globalBotonPago,globalCompras,globalHeaders,request={buyMovie:function(e,o,t,n,i){request.send("apigateway.superappbaz.com/integracion/superapp/diversion/gestion-peliculas/v1/peliculas/"+e+"/compras","POST",t,o)},movieById:function(e,o,t){request.send("https://apigateway.superappbaz.com/integracion/superapp/canal/clientes/gestion-sesiones/v1/portal/operaciones/"+e,"GET",void 0,{"x-sicu":"3bad1290ac4600a569162efaa09117ea","x-id-interaccion":"123e4567-e89b-12d3-a456-426655440000","x-token-usuario":"SRfVZrTYvdm7mzzZmcuiDViACkAx"},o,t)},paymentButton:function(e,o,t,n){request.send("https://apigateway.superappbaz.com/integracion/superapp/pagos/captacion/traspasos/v1/boton-pago","POST",e,o,t,n)},send:function(e,o,t,n,i,a){$.ajax({url:e,method:o,contentType:"application/json",processData:!1,headers:n,data:t,success:i,error:a})}};function bind(n){$("[data-id]").each(function(){var e=$(this),o=e.data("id"),t=n[o];"precio"===o?e.html(formatAmount(t)):"saldo"===o?"false"===t&&setTimeout(function(){showAdvice(e,!0)},500):e.html(t)})}function bindFromStr(e){try{bind(JSON.parse(e))}catch(e){console.log(e)}}function changeScreen(e,o){$(".screen").addClass("no-visible"),e.removeClass("no-visible"),o()}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var o=e.target,t=e.keyCode,n=$(o.parentNode);8===t?0<n.prev().length&&((e=n.prev().find("input")).val(""),e.focus()):47<t&&t<58&&""!==o.value&&0<n.next().length&&n.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function fakeRequest(e,o){setTimeout(function(){o("000001"===e)},1500)}function payMovie(e){}function searchToJson(){for(var e,o=location.search.substring(1).split("&"),t={},n=0;n<o.length;n++)""!==o[n]&&(e=o[n].split("="),t[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return t}function showAdvice(e,o){o?e.addClass("no-visible"):e.removeClass("no-visible")}function showLoader(e){var o=$(".loader");e?(o.length<=0&&(o=$('<div class="loader">')),$("body").append(o),setTimeout(function(){return o.addClass("loader-visible")},10)):(o.removeClass("loader-visible"),setTimeout(function(){return o.remove()},375))}function validateCode(){var o=$(".auth-screen .code"),t=$(".auth-screen .digit input"),e="";t.each(function(){e+=this.value}),6===e.length?(showLoader(!0),fakeRequest(e,function(e){e?(o.addClass("valid"),changeScreen($(".resume-screen"),function(){showLoader(!1)})):(showLoader(!1),o.addClass("invalid"),setTimeout(function(){t.each(function(){$(this).val("")}),t.eq(0).focus()},100))})):o.removeClass("valid invalid")}var searchJson=searchToJson();showLoader(!0),request.movieById(searchJson.idOperacion,function(s){console.log("%o",s),changeScreen($(".detail-screen"),function(){var e=s.resultado,o=e.datosFlujo,t=o.idPelicula,n=o.nombrePelicula,i=o.numeroCuentaClienteCadenaBaz,a=o.botonPago,o=o.compras,e=e.headers;globalIdPelicula=t,globalBotonPago=a.transaccion,globalCompras=o.transaccion,globalHeaders=e,$(".detail-screen").find('[data-id="nombre"]').text(n),$(".detail-screen").find('[data-id="precio"]').text(formatAmount(a.transaccion.detallePago.montoEnvio)),$(".detail-screen").find('[data-id="tarjeta"]').text(i),showLoader(!1)})},function(){});var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){showLoader(!0),setTimeout(function(){console.log("scripts.js: Open digital sign");var o={"x-sicu":globalHeaders["x-sicu"],"x-id-interaccion":globalHeaders["x-id-interaccion"],"x-token-usuario":globalHeaders["x-token-usuario"]};showLoader(!0),request.paymentButton(o,globalBotonPago,function(e){console.log("scripts.js: Payment button. %o",e),request.buyMovie(globalIdPelicula,o,_objectSpread(_objectSpread({},globalCompras),{},{fechaOperacion:e.resultado.fechaOperacion,numeroMovimiento:e.resultado.fechaOperacion}),function(e){console.log("scripts.js: Buy movie. %o",e),changeScreen($(".resume-screen")),showLoader(!1)})})},500)}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus(),$(".screen header .close-btn").on("click",function(){console.log("scripts.js: Closing WebView")}),$(".share-btn").on("click",function(){console.log("scripts.js: Sharing ticket")}),$(".movie-btn").on("click",function(){console.log("scripts.js: Play movie")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5zd2lwZS5qcyIsInJlcXVlc3QuanMiLCJzY3JpcHRzLmpzIl0sIm5hbWVzIjpbIiQiLCJmbiIsInN3aXBlIiwib3B0aW9ucyIsInNldHRpbmdzIiwiZXh0ZW5kIiwiY2IiLCJjb25zb2xlIiwibG9nIiwidGhpcyIsImVhY2giLCIkdGhpcyIsImluaXRpYWxNb3VzZSIsInNsaWRlTW92ZW1lbnRUb3RhbCIsIm1vdXNlSXNEb3duIiwiJHNsaWRlciIsImZpbmQiLCIkdGV4dCIsIm9uIiwiZXZlbnQiLCJ3aWR0aCIsImNsaWVudFgiLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsInBhZ2VYIiwiZG9jdW1lbnQiLCJib2R5IiwiY2hhbmdlZFRvdWNoZXMiLCJmYWRlVG8iLCJhbmltYXRlIiwibGVmdCIsInJlbGF0aXZlTW91c2UiLCJzbGlkZVBlcmNlbnQiLCJjc3MiLCJqUXVlcnkiLCJnbG9iYWxJZFBlbGljdWxhIiwiZ2xvYmFsQm90b25QYWdvIiwiZ2xvYmFsQ29tcHJhcyIsImdsb2JhbEhlYWRlcnMiLCJyZXF1ZXN0IiwiYnV5TW92aWUiLCJpZE1vdmllIiwiaGVhZGVycyIsInN1Y2Nlc3MiLCJlcnJvciIsInNlbmQiLCJtb3ZpZUJ5SWQiLCJpZE9wZXJhdGlvbiIsInVuZGVmaW5lZCIsIngtc2ljdSIsIngtaWQtaW50ZXJhY2Npb24iLCJ4LXRva2VuLXVzdWFyaW8iLCJwYXltZW50QnV0dG9uIiwidXJsIiwibWV0aG9kIiwianNvbkhlYWRlcnMiLCJhamF4IiwiY29udGVudFR5cGUiLCJwcm9jZXNzRGF0YSIsImRhdGEiLCJiaW5kIiwidmFsdWVzIiwiJHRhZyIsImlkIiwidmFsdWUiLCJodG1sIiwiZm9ybWF0QW1vdW50Iiwic2V0VGltZW91dCIsInNob3dBZHZpY2UiLCJiaW5kRnJvbVN0ciIsInN0ckpzb24iLCJKU09OIiwicGFyc2UiLCJlcnIiLCJjaGFuZ2VTY3JlZW4iLCIkc2NyZWVuIiwiY2FsbGJhY2siLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiYW1vdW50IiwiTnVtYmVyIiwidG9GaXhlZCIsInJlcGxhY2UiLCJoYW5kbGVEaWdpdEtleXVwIiwiX3JlZiIsInRhcmdldCIsImtleUNvZGUiLCIkcGFyZW50IiwicGFyZW50Tm9kZSIsInByZXYiLCJsZW5ndGgiLCIkaW5wdXQiLCJ2YWwiLCJmb2N1cyIsIm5leHQiLCJ2YWxpZGF0ZUNvZGUiLCJudW1iZXJGaWx0ZXIiLCJ0ZXN0Iiwib2xkVmFsdWUiLCJvbGRTZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwib2xkU2VsZWN0aW9uRW5kIiwic2VsZWN0aW9uRW5kIiwiaGFzT3duUHJvcGVydHkiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImZha2VSZXF1ZXN0IiwiY29kZSIsInBheU1vdmllIiwic2VhcmNoVG9Kc29uIiwicGFydHMiLCJwYWlycyIsImxvY2F0aW9uIiwic2VhcmNoIiwic3Vic3RyaW5nIiwic3BsaXQiLCJvYmplY3QiLCJpIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiJGVsIiwiZmxhZyIsInNob3dMb2FkZXIiLCJzaG93IiwiJGxvYWRlciIsImFwcGVuZCIsInJlbW92ZSIsIiRjb2RlIiwiJGRpZ2l0cyIsImVxIiwic2VhcmNoSnNvbiIsIl9kYXRhJHJlc3VsdGFkbyIsInJlc3VsdGFkbyIsIl9kYXRhJHJlc3VsdGFkbyRkYXRvcyIsImRhdG9zRmx1am8iLCJpZFBlbGljdWxhIiwibm9tYnJlUGVsaWN1bGEiLCJudW1lcm9DdWVudGFDbGllbnRlQ2FkZW5hQmF6IiwiYm90b25QYWdvIiwiY29tcHJhcyIsInRyYW5zYWNjaW9uIiwidGV4dCIsImRldGFsbGVQYWdvIiwibW9udG9FbnZpbyIsIiRhZHZpY2VzIiwiJGFkdmljZSIsIl9vYmplY3RTcHJlYWQiLCJmZWNoYU9wZXJhY2lvbiIsIm51bWVyb01vdmltaWVudG8iXSwibWFwcGluZ3MiOiJzdkJBRUEsU0FBQUEsR0FDQUEsRUFBQUMsR0FBQUMsTUFBQSxTQUFBQyxHQUNBLElBQUFDLEVBQUFKLEVBQUFLLE9BQUEsQ0FDQUMsR0FBQSxXQUNBQyxRQUFBQyxJQUFBLGdCQUVBTCxHQUVBLE9BQUFNLEtBQUFDLEtBQUEsV0FDQSxJQUFBQyxFQUFBWCxFQUFBUyxNQUNBRyxFQUFBLEVBQ0FDLEVBQUEsRUFDQUMsR0FBQSxFQUNBQyxFQUFBSixFQUFBSyxLQUFBLFdBQ0FDLEVBQUFOLEVBQUFLLEtBQUEsU0FFQUQsRUFBQUcsR0FBQSx1QkFBQSxTQUFBQyxHQUNBTCxHQUFBLEVBQ0FELEVBQUFGLEVBQUFTLFFBQUFwQixFQUFBUyxNQUFBVyxRQUFBLEdBQ0FSLEVBQUFPLEVBQUFFLFNBQUFGLEVBQUFHLGNBQUFDLFFBQUEsR0FBQUMsUUFHQXhCLEVBQUF5QixTQUFBQyxLQUFBWCxHQUFBRyxHQUFBLG1CQUFBLFNBQUFDLEdBQ0EsR0FBQUwsRUFBQSxDQU1BLEdBSkFBLEdBQUEsR0FDQUssRUFBQUUsU0FBQUYsRUFBQVEsZUFBQSxHQUFBSCxPQUNBWixFQUVBQyxFQUtBLE9BSkFJLEVBQUFXLE9BQUEsSUFBQSxRQUNBYixFQUFBYyxRQUFBLENBQ0FDLEtBQUEsU0FDQSxLQWdCQTFCLEVBQUFFLFFBSUFOLEVBQUF5QixTQUFBQyxNQUFBUixHQUFBLHNCQUFBLFNBQUFDLEdBQ0EsSUFJQVksRUFKQWpCLElBS0FrQixFQUFBLEdBREFELEdBREFaLEVBQUFFLFNBQUFGLEVBQUFHLGNBQUFDLFFBQUEsR0FBQUMsT0FDQVosR0FDQUMsRUFFQUksRUFBQVcsT0FBQSxFQUFBSSxHQUVBRCxHQUFBLEVBQ0FoQixFQUFBa0IsSUFBQSxDQUFBSCxLQUFBLFVBR0FqQixFQUFBLElBQUFrQixFQUNBaEIsRUFBQWtCLElBQUEsQ0FBQUgsS0FBQWpCLEVBQUEsT0FHQUUsRUFBQWtCLElBQUEsQ0FBQUgsS0FBQUMsRUFBQSxXQXZFQSxDQTJFQUcsUUM3RUEsSUNBQUMsaUJBQUFDLGdCQUFBQyxjQUFBQyxjREFBQyxRQUFBLENBRUFDLFNBQUEsU0FBQUMsRUFBQUMsRUFBQWhCLEVBQUFpQixFQUFBQyxHQUdBTCxRQUFBTSxLQUZBLDRGQUFBSixFQUFBLFdBRUEsT0FBQWYsRUFBQWdCLElBT0FJLFVBQUEsU0FBQUMsRUFBQUosRUFBQUMsR0FFQUwsUUFBQU0sS0FEQSxpSEFBQUUsRUFDQSxXQUFBQyxFQUFBLENBQ0FDLFNBQUEsbUNBQ0FDLG1CQUFBLHVDQUNBQyxrQkFBQSxnQ0FDQVIsRUFBQUMsSUFvREFRLGNBQUEsU0FBQTFCLEVBQUFnQixFQUFBQyxFQUFBQyxHQUVBTCxRQUFBTSxLQURBLGtHQUNBLE9BQUFuQixFQUFBZ0IsRUFBQUMsRUFBQUMsSUFZQUMsS0FBQSxTQUFBUSxFQUFBQyxFQUFBNUIsRUFBQTZCLEVBQUFaLEVBQUFDLEdBQ0E1QyxFQUFBd0QsS0FBQSxDQUNBSCxJQUFBQSxFQUNBQyxPQUFBQSxFQUNBRyxZQUFBLG1CQUNBQyxhQUFBLEVBQ0FoQixRQUFBYSxFQUNBSSxLQUFBakMsRUFDQWlCLFFBQUFBLEVBQ0FDLE1BQUFBLE1DdkZBLFNBQUFnQixLQUFBQyxHQUNBN0QsRUFBQSxhQUVBVSxLQUFBLFdBQ0EsSUFBQW9ELEVBQUE5RCxFQUFBUyxNQUNBc0QsRUFBQUQsRUFBQUgsS0FBQSxNQUNBSyxFQUFBSCxFQUFBRSxHQUVBLFdBQUFBLEVBQ0FELEVBQUFHLEtBQUFDLGFBQUFGLElBQ0EsVUFBQUQsRUFDQSxVQUFBQyxHQUNBRyxXQUFBLFdBQUFDLFdBQUFOLEdBQUEsSUFBQSxLQUdBQSxFQUFBRyxLQUFBRCxLQVNBLFNBQUFLLFlBQUFDLEdBQ0EsSUFFQVYsS0FEQVcsS0FBQUMsTUFBQUYsSUFFQSxNQUFBRyxHQUFBbEUsUUFBQUMsSUFBQWlFLElBUUEsU0FBQUMsYUFBQUMsRUFBQUMsR0FDQTVFLEVBQUEsV0FBQTZFLFNBQUEsY0FDQUYsRUFBQUcsWUFBQSxjQUVBRixJQVFBLFNBQUFWLGFBQUFhLEdBQ0EsTUFBQSxLQUFBQyxPQUFBRCxHQUFBRSxRQUFBLEdBQUFDLFFBQUEsd0JBQUEsS0FPQSxTQUFBQyxpQkFBQUMsR0FBQSxJQUFBQyxFQUFBRCxFQUFBQyxPQUFBQyxFQUFBRixFQUFBRSxRQUNBQyxFQUFBdkYsRUFBQXFGLEVBQUFHLFlBRUEsSUFBQUYsRUFDQSxFQUFBQyxFQUFBRSxPQUFBQyxVQUNBQyxFQUFBSixFQUFBRSxPQUFBekUsS0FBQSxVQUVBNEUsSUFBQSxJQUNBRCxFQUFBRSxTQUdBLEdBQUFQLEdBQUFBLEVBQUEsSUFDQSxLQUFBRCxFQUFBckIsT0FDQSxFQUFBdUIsRUFBQU8sT0FBQUosUUFDQUgsRUFBQU8sT0FBQTlFLEtBQUEsU0FDQTZFLFFBS0FFLGVBT0EsU0FBQUMsYUFBQTdFLEdBQ0EsWUFFQThFLEtBQUF4RixLQUFBdUQsUUFDQXZELEtBQUF5RixTQUFBekYsS0FBQXVELE1BQ0F2RCxLQUFBMEYsa0JBQUExRixLQUFBMkYsZUFDQTNGLEtBQUE0RixnQkFBQTVGLEtBQUE2RixjQUNBN0YsS0FBQThGLGVBQUEsYUFDQTlGLEtBQUF1RCxNQUFBdkQsS0FBQXlGLFNBQ0F6RixLQUFBK0Ysa0JBQUEvRixLQUFBMEYsa0JBQUExRixLQUFBNEYsa0JBRUE1RixLQUFBdUQsTUFBQSxHQVFBLFNBQUF5QyxZQUFBQyxFQUFBOUIsR0FDQVQsV0FBQSxXQUNBUyxFQUFBLFdBQUE4QixJQUNBLE1BTUEsU0FBQUMsU0FBQXJDLElBUUEsU0FBQXNDLGVBS0EsSUFKQSxJQVNBQyxFQVRBQyxFQUFBQyxTQUFBQyxPQUFBQyxVQUFBLEdBQUFDLE1BQUEsS0FDQUMsRUFBQSxHQUNBQyxFQUFBLEVBRUFBLEVBQUFOLEVBQUFwQixPQUFBMEIsSUFDQSxLQUFBTixFQUFBTSxLQUlBUCxFQUFBQyxFQUFBTSxHQUFBRixNQUFBLEtBQ0FDLEVBQUFFLG1CQUFBUixFQUFBLEtBQUFRLG1CQUFBUixFQUFBLEtBR0EsT0FBQU0sRUFRQSxTQUFBL0MsV0FBQWtELEVBQUFDLEdBQ0FBLEVBQ0FELEVBQUF6QyxTQUFBLGNBRUF5QyxFQUFBeEMsWUFBQSxjQVFBLFNBQUEwQyxXQUFBQyxHQUNBLElBQUFDLEVBQUExSCxFQUFBLFdBRUF5SCxHQUNBQyxFQUFBaEMsUUFBQSxJQUNBZ0MsRUFBQTFILEVBQUEseUJBR0FBLEVBQUEsUUFBQTJILE9BQUFELEdBQ0F2RCxXQUFBLFdBQUEsT0FBQXVELEVBQUE3QyxTQUFBLG1CQUFBLE1BR0E2QyxFQUFBNUMsWUFBQSxrQkFDQVgsV0FBQSxXQUFBLE9BQUF1RCxFQUFBRSxVQUFBLE1BU0EsU0FBQTdCLGVBQ0EsSUFBQThCLEVBQUE3SCxFQUFBLHNCQUNBOEgsRUFBQTlILEVBQUEsNkJBQ0EwRyxFQUFBLEdBRUFvQixFQUFBcEgsS0FBQSxXQUNBZ0csR0FBQWpHLEtBQUF1RCxRQUdBLElBQUEwQyxFQUFBaEIsUUFDQThCLFlBQUEsR0FFQWYsWUFBQUMsRUFBQSxTQUFBL0QsR0FDQUEsR0FDQWtGLEVBQUFoRCxTQUFBLFNBRUFILGFBQUExRSxFQUFBLGtCQUFBLFdBQ0F3SCxZQUFBLE9BR0FBLFlBQUEsR0FDQUssRUFBQWhELFNBQUEsV0FFQVYsV0FBQSxXQUNBMkQsRUFBQXBILEtBQUEsV0FBQVYsRUFBQVMsTUFBQW1GLElBQUEsTUFDQWtDLEVBQUFDLEdBQUEsR0FBQWxDLFNBQ0EsU0FJQWdDLEVBQUEvQyxZQUFBLGlCQU1BLElBQUFrRCxXQUFBcEIsZUFFQVksWUFBQSxHQUNBakYsUUFBQU8sVUFBQWtGLFdBQUEsWUFBQSxTQUFBckUsR0FDQXBELFFBQUFDLElBQUEsS0FBQW1ELEdBQ0FlLGFBQUExRSxFQUFBLGtCQUFBLFdBQ0EsSUFBQWlJLEVBQUF0RSxFQUFBdUUsVUFBQUMsRUFBQUYsRUFBQUcsV0FBQUMsRUFBQUYsRUFBQUUsV0FBQUMsRUFBQUgsRUFBQUcsZUFBQUMsRUFBQUosRUFBQUksNkJBQUFDLEVBQUFMLEVBQUFLLFVBQUFDLEVBQUFOLEVBQUFNLFFBQUEvRixFQUFBdUYsRUFBQXZGLFFBRUFQLGlCQUFBa0csRUFDQWpHLGdCQUFBb0csRUFBQUUsWUFDQXJHLGNBQUFvRyxFQUFBQyxZQUNBcEcsY0FBQUksRUFFQTFDLEVBQUEsa0JBQUFnQixLQUFBLHNCQUFBMkgsS0FBQUwsR0FDQXRJLEVBQUEsa0JBQUFnQixLQUFBLHNCQUFBMkgsS0FBQXpFLGFBQUFzRSxFQUFBRSxZQUFBRSxZQUFBQyxhQUNBN0ksRUFBQSxrQkFBQWdCLEtBQUEsdUJBQUEySCxLQUFBSixHQUVBZixZQUFBLE1BRUEsY0FTQSxJQUFBc0IsU0FBQTlJLEVBQUEsaUJBRUE4SSxTQUFBcEksS0FBQSxXQUNBLElBQUFxSSxFQUFBL0ksRUFBQVMsTUFDQXNJLEVBQUEvSCxLQUFBLGNBRUFFLEdBQUEsUUFBQSxXQUNBa0QsV0FBQTJFLEdBQUEsT0FJQS9JLEVBQUEsNkJBQUFFLE1BQUEsQ0FDQUksR0FBQSxXQUNBa0gsWUFBQSxHQUVBckQsV0FBQSxXQUNBNUQsUUFBQUMsSUFBQSxpQ0FDQSxJQUFBa0MsRUFBQSxDQUNBTyxTQUFBWCxjQUFBLFVBQ0FZLG1CQUFBWixjQUFBLG9CQUNBYSxrQkFBQWIsY0FBQSxvQkFHQWtGLFlBQUEsR0FDQWpGLFFBQUFhLGNBQUFWLEVBQUFOLGdCQUFBLFNBQUF1QixHQUNBcEQsUUFBQUMsSUFBQSxpQ0FBQW1ELEdBQ0FwQixRQUFBQyxTQUFBTCxpQkFBQU8sRUFBQXNHLGNBQUFBLGNBQUEsR0FBQTNHLGVBQUEsR0FBQSxDQUFBNEcsZUFBQXRGLEVBQUF1RSxVQUFBZSxlQUFBQyxpQkFBQXZGLEVBQUF1RSxVQUFBZSxpQkFBQSxTQUFBdEYsR0FDQXBELFFBQUFDLElBQUEsNEJBQUFtRCxHQUNBZSxhQUFBMUUsRUFBQSxtQkFDQXdILFlBQUEsUUFHQSxRQU1BLElBQUFNLFFBQUE5SCxFQUFBLDZCQUVBOEgsUUFBQTVHLEdBQUEsNENBQUE4RSxjQUNBOEIsUUFBQTVHLEdBQUEsUUFBQWlFLGtCQUVBMkMsUUFBQUMsR0FBQSxHQUFBbEMsUUFJQTdGLEVBQUEsNkJBQUFrQixHQUFBLFFBQUEsV0FDQVgsUUFBQUMsSUFBQSxpQ0FNQVIsRUFBQSxjQUFBa0IsR0FBQSxRQUFBLFdBQ0FYLFFBQUFDLElBQUEsZ0NBTUFSLEVBQUEsY0FBQWtCLEdBQUEsUUFBQSxXQUNBWCxRQUFBQyxJQUFBIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVmZXJlbmNlOiBodHRwczovL2NvZGVwZW4uaW8vZ3ByZXNzdXR0bzUvcGVuL05qSm9iRz9lZGl0b3JzPTAwMTBcclxuXHJcbihmdW5jdGlvbiAoJCkge1xyXG4gICAgJC5mbi5zd2lwZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIHNldHRpbmdzID0gJC5leHRlbmQoe1xyXG4gICAgICAgICAgICBjYjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3dpcGUgZG9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICB2YXIgaW5pdGlhbE1vdXNlID0gMDtcclxuICAgICAgICAgICAgdmFyIHNsaWRlTW92ZW1lbnRUb3RhbCA9IDA7XHJcbiAgICAgICAgICAgIHZhciBtb3VzZUlzRG93biA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgJHNsaWRlciA9ICR0aGlzLmZpbmQoJy5zbGlkZXInKTtcclxuICAgICAgICAgICAgdmFyICR0ZXh0ID0gJHRoaXMuZmluZCgnLnRleHQnKTtcclxuXHJcbiAgICAgICAgICAgICRzbGlkZXIub24oJ21vdXNlZG93biB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBtb3VzZUlzRG93biA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBzbGlkZU1vdmVtZW50VG90YWwgPSAkdGhpcy53aWR0aCgpIC0gJCh0aGlzKS53aWR0aCgpICsgMTA7XHJcbiAgICAgICAgICAgICAgICBpbml0aWFsTW91c2UgPSBldmVudC5jbGllbnRYIHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKGRvY3VtZW50LmJvZHksICRzbGlkZXIpLm9uKCdtb3VzZXVwIHRvdWNoZW5kJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW1vdXNlSXNEb3duKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIG1vdXNlSXNEb3duID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudE1vdXNlID0gZXZlbnQuY2xpZW50WCB8fCBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgICAgIHZhciByZWxhdGl2ZU1vdXNlID0gY3VycmVudE1vdXNlIC0gaW5pdGlhbE1vdXNlO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChyZWxhdGl2ZU1vdXNlIDwgc2xpZGVNb3ZlbWVudFRvdGFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRleHQuZmFkZVRvKDMwMCwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogXCItMTBweFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLyogJHNsaWRlci5hZGRDbGFzcygndW5sb2NrZWQnKTtcclxuICAgICAgICAgICAgICAgICQoJyNsb2NrZXInKS50ZXh0KCdsb2NrX291dGxpbmUnKTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzbGlkZXIub24oJ2NsaWNrIHRhcCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISRzbGlkZXIuaGFzQ2xhc3MoJ3VubG9ja2VkJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzbGlkZXIucmVtb3ZlQ2xhc3MoJ3VubG9ja2VkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNsb2NrZXInKS50ZXh0KCdsb2NrX29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5vZmYoJ2NsaWNrIHRhcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSwgMCk7ICovXHJcblxyXG4gICAgICAgICAgICAgICAgc2V0dGluZ3MuY2IoKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoZG9jdW1lbnQuYm9keSkub24oJ21vdXNlbW92ZSB0b3VjaG1vdmUnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICghbW91c2VJc0Rvd24pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50TW91c2UgPSBldmVudC5jbGllbnRYIHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5wYWdlWDtcclxuICAgICAgICAgICAgICAgIHZhciByZWxhdGl2ZU1vdXNlID0gY3VycmVudE1vdXNlIC0gaW5pdGlhbE1vdXNlO1xyXG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlUGVyY2VudCA9IDEgLSAocmVsYXRpdmVNb3VzZSAvIHNsaWRlTW92ZW1lbnRUb3RhbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJHRleHQuZmFkZVRvKDAsIHNsaWRlUGVyY2VudCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlTW91c2UgPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzbGlkZXIuY3NzKHsgJ2xlZnQnOiAnLTEwcHgnIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChyZWxhdGl2ZU1vdXNlID49IHNsaWRlTW92ZW1lbnRUb3RhbCArIDEwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5jc3MoeyAnbGVmdCc6IHNsaWRlTW92ZW1lbnRUb3RhbCArICdweCcgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJHNsaWRlci5jc3MoeyAnbGVmdCc6IHJlbGF0aXZlTW91c2UgLSAxMCB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pKGpRdWVyeSk7XHJcbiIsImNvbnN0IHJlcXVlc3QgPSB7XHJcblxyXG4gICAgYnV5TW92aWU6IGZ1bmN0aW9uIChpZE1vdmllLCBoZWFkZXJzLCBib2R5LCBzdWNjZXNzLCBlcnJvcikge1xyXG4gICAgICAgIGNvbnN0IHVybCA9ICdhcGlnYXRld2F5LnN1cGVyYXBwYmF6LmNvbS9pbnRlZ3JhY2lvbi9zdXBlcmFwcC9kaXZlcnNpb24vZ2VzdGlvbi1wZWxpY3VsYXMvdjEvcGVsaWN1bGFzLycgKyBpZE1vdmllICsgJy9jb21wcmFzJztcclxuXHJcbiAgICAgICAgcmVxdWVzdC5zZW5kKHVybCwgJ1BPU1QnLCBib2R5LCBoZWFkZXJzLCApXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IG1vdmllIGJ5IGlkIG9wZXJhdGlvbi5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZE9wZXJhdGlvbiBcclxuICAgICAqL1xyXG4gICAgbW92aWVCeUlkOiBmdW5jdGlvbihpZE9wZXJhdGlvbiwgc3VjY2VzcywgZXJyb3IpIHtcclxuICAgICAgICBjb25zdCB1cmwgPSAnaHR0cHM6Ly9hcGlnYXRld2F5LnN1cGVyYXBwYmF6LmNvbS9pbnRlZ3JhY2lvbi9zdXBlcmFwcC9jYW5hbC9jbGllbnRlcy9nZXN0aW9uLXNlc2lvbmVzL3YxL3BvcnRhbC9vcGVyYWNpb25lcy8nICsgaWRPcGVyYXRpb247XHJcbiAgICAgICAgcmVxdWVzdC5zZW5kKHVybCwgJ0dFVCcsIHVuZGVmaW5lZCwge1xyXG4gICAgICAgICAgICAneC1zaWN1JzogJzNiYWQxMjkwYWM0NjAwYTU2OTE2MmVmYWEwOTExN2VhJyxcclxuICAgICAgICAgICAgJ3gtaWQtaW50ZXJhY2Npb24nOiAnMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjU1NDQwMDAwJyxcclxuICAgICAgICAgICAgJ3gtdG9rZW4tdXN1YXJpbyc6ICdTUmZWWnJUWXZkbTdtenpabWN1aURWaUFDa0F4J1xyXG4gICAgICAgIH0sIHN1Y2Nlc3MsIGVycm9yKTtcclxuICAgICAgICBcclxuICAgICAgICAvKiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBzdWNjZXNzKHtcclxuICAgICAgICAgICAgICAgIFwiZGF0b3NGbHVqb1wiOiB7XHJcbiAgICAgICAgICAgICAgICAgICBcImlkUGVsaWN1bGFcIjogXCI0NjY1N1wiLFxyXG4gICAgICAgICAgICAgICAgICAgXCJub21icmVQZWxpY3VsYVwiOiBcIkxhIHBpZWwgZnLDrWFcIixcclxuICAgICAgICAgICAgICAgICAgIFwiaW1hZ2VuUGVsaWN1bGFcIjogXCJodHRwczovL2ltZ24uY2RuLml1dHBjZG4uY29tL0lNR1MvVk9EL0NPVkVSLzM0NTM1NC04Yy5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgIFwibnVtZXJvQ3VlbnRhQ2xpZW50ZUNpZnJhZG9Sc2FcIjogXCJyTXlMQ3pVVmlmbFZ1dmtCVUxLaE10NHNITTkraXhGdmNUTHQzUnE0TEhtbnRLTmdCWi9UVTVLdDhnY0pla3dObno3TVhERmgzcG1yXFxubmNVL2xhQjk3dGgveE5LMytHNUo2Y3J6Q0VHNjlwL0ppUyt2eXpIaEVNdFNNdWdvVzFZU2pydmNUYzRZSndCbXBBWlpTbW1RbVZZSlxcbi9wK05Cek1nQUd1dUhVdzdJVFlkZmh0Mm01MCtORDlMazhjWjkybDk5RERGYlBwc3dkbHB3a29vdy9VMitTa1E0NGQ0YkZhaEUwRkZcXG5Makh6ZGd1WXR4ejR6ZDk2ZTJWUFFiQ2Y3dDBLb2piTThiR2NaZmcvUTZtZzNmTUNBRHdBR2RJVDd6Q2tiai9BaDhtelFrczRRM2VmXFxuWE5LWnlmUFArM3RmQmdGdjhMbUZZZWRVUnJqTE1SRWE4YUhZaUE9PVxcblwiLFxyXG4gICAgICAgICAgICAgICAgICAgXCJudW1lcm9DdWVudGFDbGllbnRlQ2FkZW5hQmF6XCI6IFwiYmF6KioqNzg5MFwiLFxyXG4gICAgICAgICAgICAgICAgICAgXCJib3RvblBhZ29cIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uXCI6IFwibWlfZGl2ZXJzaW9uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcImZsb3dcIjogXCJtaXNfcGVsaWN1bGFzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcImFtb3VudFwiOiBcIjU1XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcImNvbW1pc3Npb25cIjogMC4wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgXCJjb25jZXB0XCI6IFwiQ2FyZ28gcG9yIHJlbnRhIGRlIHBlbMOtY3VsYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgXCJpZENvbXBhbnlcIjogXCJUUDAwMDAwMDAyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcImlkT3BlcmFjaW9uQ29uY2lsaWFjaW9uXCI6IFwiQ1A4OGtUMUFtdnpUTmxnblVfTHNQQVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgXCJpZFJlZmVyZW5jZVBheVwiOiBcIjAxMDEwMDAwMDA0NjY1NzIwMjE3ODkwXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIml2YVwiOiAwLjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcInF1YW50aXR5XCI6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcInJlcXVpcmVCaWxsXCI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcInNoaXBwaW5nQW1vdW50XCI6IFwiNTVcIlxyXG4gICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgIFwiY29tcHJhc1wiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBcImNhbGlkYWRQZWxpY3VsYVwiOiBcIkhEXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIm1vbnRvQ2lmcmFkb1wiOiBcIjFkZkZ0UkhKQW4zS0pWeWQ4bU9OajhjZVVoRWxwXzJYdFBuM3VfUDV5NG9cIixcclxuICAgICAgICAgICAgICAgICAgICAgIFwibnVtZXJvUmVmZXJlbmNpYUNpZnJhZG9BbG5vdmFcIjogXCJ6bERGeEJLYllhRWJQbXBva1J6ek9FMFN4Wm1yWkQ0SHFLUnZNT3NZSzNJXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIm51bWVyb0N1ZW50YUNsaWVudGVDaWZyYWRvQWxub3ZhXCI6IFwiV0JWWEhqeDA5Z2tSbFVrUHZaOUFGOHNHbFk1bklMWjJiWm10NkN2VVUyY1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgXCJmZWNoYU9wZXJhY2lvblwiOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgXCJudW1lcm9Nb3ZpbWllbnRvXCI6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBcInBlbGljdWxhR3JhdHVpdGFcIjogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBcImhlYWRlcnNcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgXCJ4LXNpY3VcIjogXCJhNDZhMTY1ZjJhNDc0NmU3YWJjYzRkZTkxNWM2MDAwZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgXCJ4LWlkLWludGVyYWNjaW9uXCI6IFwiNmVjNmVlMDYtOTMyNS00ZjFmLWIyNmUtMjJjNzRjYzVjNTJmXCIsXHJcbiAgICAgICAgICAgICAgICAgICBcIngtdG9rZW4tdXN1YXJpb1wiOiBcIjI5OGE2NDBhNzhlNTY1MjA4MzRjZWUwODc1OTBjODlmXCIsXHJcbiAgICAgICAgICAgICAgICAgICBcIngtdG9rZW4tYXV0aC1iZWFyZXJcIjogXCJleUpyYVdRaU9pSmtjemRSTmxCVGJFOVpOU3R1TW5KalhDOVBkakpxVEdwNWVXWlJTMlZKZG1GalJYY3dXSGxOUW04MGN6MGlMQ0poYkdjaU9pSlNVekkxTmlKOS5leUp6ZFdJaU9pSXlOblEwT1dRMWRqaHJZVFpoY1RsdlpuRmlhalF5TldVNVppSXNJblJ2YTJWdVgzVnpaU0k2SW1GalkyVnpjeUlzSW5OamIzQmxJam9pVlhOMVlYSnBiMXd2WkdWc1pYUmxJRlZ6ZFdGeWFXOWNMM0psWVdRZ1ZYTjFZWEpwYjF3dmRYQmtZWFJsSWl3aVlYVjBhRjkwYVcxbElqb3hOak15TlRBMU5EZzNMQ0pwYzNNaU9pSm9kSFJ3Y3pwY0wxd3ZZMjluYm1sMGJ5MXBaSEF1ZFhNdFpXRnpkQzB4TG1GdFlYcHZibUYzY3k1amIyMWNMM1Z6TFdWaGMzUXRNVjlGYUVadVNVOUpSekFpTENKbGVIQWlPakUyTXpJMU1Ea3dPRGNzSW1saGRDSTZNVFl6TWpVd05UUTROeXdpZG1WeWMybHZiaUk2TWl3aWFuUnBJam9pTnpkbVpqWTNaVFl0TUdFek55MDBaV1kzTFdGa09XSXRaRGRsWWpNd016Y3hNMkUxSWl3aVkyeHBaVzUwWDJsa0lqb2lNalowTkRsa05YWTRhMkUyWVhFNWIyWnhZbW8wTWpWbE9XWWlmUS5mQkxCRUFveDFiMGU5SnlZM25PYXpveGktU0JkcndhTGpDc0cwcTRuT19QOGJtMmw1aGdKSU1UVUlnWnZKOXJxZTZOVE9Uci1ORFB3NkdWTnFEeDVNNWNtenhvZXh0ZnlnNkJPYktpdmxoSndUTENmVXE3VzF5bHZnSGRBNnJVNm4wYXpiMFl3dUJYalBLZmtORFoxYTJJMVdpaHJyWm5rVTVvbHZTVjlIOWRfOF9vNnpUMlAxWTVCa3RyTVNhMVRVYTZiVWliS2tQVGVGQkJxWkctODRzWmthYzY2WEd5b3dCWXF0UmR2aVFZSmloUEpjdkxGV2M0QmFkWElGOHBLVEFFekkxU0paeGN0YXB4Y3RkOTVuME5WVTAyN2NzX1c2ald3LXVLZUQ2dm9YZkgyalBwSVp5VmFRVlBtdzB6dU41YUJtcWRDT3pqeWdpeTRKUEFBZUFcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIFwiaWRGbHVqb1wiOiBcIlJFTlRBX1BFTElDVUxBXCJcclxuICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIDEwMDApOyAqL1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBheW1lbnQgYnV0dG9uLlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGJvZHlcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBoZWFkZXJzXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBzdWNjZXNzXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBlcnJvclxyXG4gICAgICovXHJcbiAgICBwYXltZW50QnV0dG9uOiBmdW5jdGlvbiAoYm9keSwgaGVhZGVycywgc3VjY2VzcywgZXJyb3IpIHtcclxuICAgICAgICBjb25zdCB1cmwgPSAnaHR0cHM6Ly9hcGlnYXRld2F5LnN1cGVyYXBwYmF6LmNvbS9pbnRlZ3JhY2lvbi9zdXBlcmFwcC9wYWdvcy9jYXB0YWNpb24vdHJhc3Bhc29zL3YxL2JvdG9uLXBhZ28nO1xyXG4gICAgICAgIHJlcXVlc3Quc2VuZCh1cmwsICdQT1NUJywgYm9keSwgaGVhZGVycywgc3VjY2VzcywgZXJyb3IpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIE1ha2UgcmVxdWVzdC5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gYm9keVxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGpzb25IZWFkZXJzIFxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gc3VjY2VzcyBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGVycm9yXHJcbiAgICAgKi9cclxuICAgIHNlbmQ6IGZ1bmN0aW9uICh1cmwsIG1ldGhvZCwgYm9keSwganNvbkhlYWRlcnMsIHN1Y2Nlc3MsIGVycm9yKSB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsLCBcclxuICAgICAgICAgICAgbWV0aG9kLFxyXG4gICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsIFxyXG4gICAgICAgICAgICBoZWFkZXJzOiBqc29uSGVhZGVycywgXHJcbiAgICAgICAgICAgIGRhdGE6IGJvZHksXHJcbiAgICAgICAgICAgIHN1Y2Nlc3MsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn07IiwibGV0IGdsb2JhbElkUGVsaWN1bGEsIGdsb2JhbEJvdG9uUGFnbywgZ2xvYmFsQ29tcHJhcywgZ2xvYmFsSGVhZGVycztcclxuXHJcbi8qKlxyXG4gKiBCaW5kIEpTT04gdG8gSFRNTC5cclxuICogQHBhcmFtIHtvYmplY3R9IHZhbHVlc1xyXG4gKi9cclxuZnVuY3Rpb24gYmluZCh2YWx1ZXMpIHtcclxuICAgIGNvbnN0ICR0YWdzID0gJCgnW2RhdGEtaWRdJyk7XHJcblxyXG4gICAgJHRhZ3MuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc3QgJHRhZyA9ICQodGhpcyk7XHJcbiAgICAgICAgY29uc3QgaWQgPSAkdGFnLmRhdGEoJ2lkJyk7XHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSB2YWx1ZXNbaWRdO1xyXG5cclxuICAgICAgICBpZiAoaWQgPT09ICdwcmVjaW8nKSB7XHJcbiAgICAgICAgICAgICR0YWcuaHRtbChmb3JtYXRBbW91bnQodmFsdWUpKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGlkID09PSAnc2FsZG8nKSB7XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gJ2ZhbHNlJykge1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7IHNob3dBZHZpY2UoJHRhZywgdHJ1ZSk7IH0sIDUwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkdGFnLmh0bWwodmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogUGFyc2Ugc3RyaW5nIHRvIG9iamVjdCBhbmQgdGhlbiBiaW5kLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RySnNvbiBcclxuICovXHJcbmZ1bmN0aW9uIGJpbmRGcm9tU3RyKHN0ckpzb24pIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2Uoc3RySnNvbik7XHJcbiAgICAgICAgYmluZChqc29uKTtcclxuICAgIH0gY2F0Y2ggKGVycikgeyBjb25zb2xlLmxvZyhlcnIpOyB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGFuZ2Ugc2NyZWVuLlxyXG4gKiBAcGFyYW0ge2pRdWVyeX0gJHNjcmVlblxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xyXG4gKi9cclxuZnVuY3Rpb24gY2hhbmdlU2NyZWVuKCRzY3JlZW4sIGNhbGxiYWNrKSB7XHJcbiAgICAkKCcuc2NyZWVuJykuYWRkQ2xhc3MoJ25vLXZpc2libGUnKTtcclxuICAgICRzY3JlZW4ucmVtb3ZlQ2xhc3MoJ25vLXZpc2libGUnKTtcclxuXHJcbiAgICBjYWxsYmFjaygpO1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IGFtb3VudCB3aXRoIGN1cnJlbmN5IGZvcm1hdC5cclxuICogQHBhcmFtIHtudW1iZXJ9IGFtb3VudCBcclxuICogQHJldHVybnMge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGZvcm1hdEFtb3VudChhbW91bnQpIHtcclxuICAgIHJldHVybiAnJCAnICsgTnVtYmVyKGFtb3VudCkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXEIoPz0oXFxkezN9KSsoPyFcXGQpKS9nLCAnLCcpO1xyXG59XHJcblxyXG4vKipcclxuICogSGFuZGxlIGRpZ2l0IGtleXVwIGV2ZW50LlxyXG4gKiBAcGFyYW0ge0tleWJvYXJkRXZlbnR9IGV2ZW50XHJcbiAqL1xyXG5mdW5jdGlvbiBoYW5kbGVEaWdpdEtleXVwKHsgdGFyZ2V0LCBrZXlDb2RlIH0pIHtcclxuICAgIGNvbnN0ICRwYXJlbnQgPSAkKHRhcmdldC5wYXJlbnROb2RlKTtcclxuXHJcbiAgICBpZiAoa2V5Q29kZSA9PT0gOCkge1xyXG4gICAgICAgIGlmICgkcGFyZW50LnByZXYoKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGNvbnN0ICRpbnB1dCA9ICRwYXJlbnQucHJldigpLmZpbmQoJ2lucHV0Jyk7XHJcblxyXG4gICAgICAgICAgICAkaW5wdXQudmFsKCcnKTtcclxuICAgICAgICAgICAgJGlucHV0LmZvY3VzKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0gZWxzZSBpZiAoa2V5Q29kZSA+IDQ3ICYmIGtleUNvZGUgPCA1OCkge1xyXG4gICAgICAgIGlmICh0YXJnZXQudmFsdWUgIT09ICcnKSB7XHJcbiAgICAgICAgICAgIGlmICgkcGFyZW50Lm5leHQoKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCAkaW5wdXQgPSAkcGFyZW50Lm5leHQoKS5maW5kKCdpbnB1dCcpO1xyXG4gICAgICAgICAgICAgICAgJGlucHV0LmZvY3VzKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFsaWRhdGVDb2RlKCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBcHBseSBudW1iZXIgZmlsdGVyLlxyXG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudFxyXG4gKi9cclxuZnVuY3Rpb24gbnVtYmVyRmlsdGVyKGV2ZW50KSB7XHJcbiAgICBjb25zdCBmaWx0ZXIgPSAvXlxcZHswLDF9JC87XHJcblxyXG4gICAgaWYgKGZpbHRlci50ZXN0KHRoaXMudmFsdWUpKSB7XHJcbiAgICAgICAgdGhpcy5vbGRWYWx1ZSA9IHRoaXMudmFsdWU7XHJcbiAgICAgICAgdGhpcy5vbGRTZWxlY3Rpb25TdGFydCA9IHRoaXMuc2VsZWN0aW9uU3RhcnQ7XHJcbiAgICAgICAgdGhpcy5vbGRTZWxlY3Rpb25FbmQgPSB0aGlzLnNlbGVjdGlvbkVuZDtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eSgnb2xkVmFsdWUnKSkge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLm9sZFZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UodGhpcy5vbGRTZWxlY3Rpb25TdGFydCwgdGhpcy5vbGRTZWxlY3Rpb25FbmQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnZhbHVlID0gJyc7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEbyBmYWtlIHJlcXVlc3QuXHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXHJcbiAqL1xyXG5mdW5jdGlvbiBmYWtlUmVxdWVzdChjb2RlLCBjYWxsYmFjaykge1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgY2FsbGJhY2soY29kZSA9PT0gJzAwMDAwMScpO1xyXG4gICAgfSwgMTUwMCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RySnNvblxyXG4gKi9cclxuZnVuY3Rpb24gcGF5TW92aWUoc3RySnNvbikge1xyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIGxvY2F0aW9uLnNlYXJjaCB0byBKU09OLlxyXG4gKiBAcmV0dXJucyBvYmplY3RcclxuICovXHJcbmZ1bmN0aW9uIHNlYXJjaFRvSnNvbigpIHtcclxuICAgIGNvbnN0IHBhaXJzID0gbG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKS5zcGxpdCgnJicpO1xyXG4gICAgY29uc3Qgb2JqZWN0ID0ge307XHJcbiAgICBsZXQgaSA9IDA7XHJcblxyXG4gICAgZm9yICg7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChwYWlyc1tpXSA9PT0gJycpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBwYXJ0cyA9IHBhaXJzW2ldLnNwbGl0KCc9Jyk7XHJcbiAgICAgICAgb2JqZWN0W2RlY29kZVVSSUNvbXBvbmVudChwYXJ0c1swXSldID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzFdKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gb2JqZWN0O1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyBvciBoaWRlIGFkdmljZS5cclxuICogQHBhcmFtIHtqUXVlcnl9ICRlbCBcclxuICogQHBhcmFtIHtib29sZWFufSBmbGFnIFxyXG4gKi9cclxuZnVuY3Rpb24gc2hvd0FkdmljZSgkZWwsIGZsYWcpIHtcclxuICAgIGlmIChmbGFnKSB7XHJcbiAgICAgICAgJGVsLmFkZENsYXNzKCduby12aXNpYmxlJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICRlbC5yZW1vdmVDbGFzcygnbm8tdmlzaWJsZScpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogU2hvdyBvciBoaWRlIGxvYWRlci5cclxuICogQHBhcmFtIHtib29sZWFufSBzaG93XHJcbiAqL1xyXG5mdW5jdGlvbiBzaG93TG9hZGVyKHNob3cpIHtcclxuICAgIGxldCAkbG9hZGVyID0gJCgnLmxvYWRlcicpO1xyXG5cclxuICAgIGlmIChzaG93KSB7XHJcbiAgICAgICAgaWYgKCRsb2FkZXIubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgICAgJGxvYWRlciA9ICQoJzxkaXYgY2xhc3M9XCJsb2FkZXJcIj4nKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQoJ2JvZHknKS5hcHBlbmQoJGxvYWRlcik7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiAkbG9hZGVyLmFkZENsYXNzKCdsb2FkZXItdmlzaWJsZScpLCAxMCk7XHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkbG9hZGVyLnJlbW92ZUNsYXNzKCdsb2FkZXItdmlzaWJsZScpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gJGxvYWRlci5yZW1vdmUoKSwgMzc1KTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWYWxpZGF0ZSBjb2RlIGZyb20gY2xpZW50LlxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlQ29kZSgpIHtcclxuICAgIGNvbnN0ICRjb2RlID0gJCgnLmF1dGgtc2NyZWVuIC5jb2RlJyk7XHJcbiAgICBjb25zdCAkZGlnaXRzID0gJCgnLmF1dGgtc2NyZWVuIC5kaWdpdCBpbnB1dCcpO1xyXG4gICAgbGV0IGNvZGUgPSBcIlwiO1xyXG5cclxuICAgICRkaWdpdHMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29kZSArPSB0aGlzLnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKGNvZGUubGVuZ3RoID09PSA2KSB7XHJcbiAgICAgICAgc2hvd0xvYWRlcih0cnVlKTtcclxuXHJcbiAgICAgICAgZmFrZVJlcXVlc3QoY29kZSwgc3VjY2VzcyA9PiB7XHJcbiAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAkY29kZS5hZGRDbGFzcygndmFsaWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VTY3JlZW4oJCgnLnJlc3VtZS1zY3JlZW4nKSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dMb2FkZXIoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzaG93TG9hZGVyKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICRjb2RlLmFkZENsYXNzKCdpbnZhbGlkJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJGRpZ2l0cy5lYWNoKGZ1bmN0aW9uICgpIHsgJCh0aGlzKS52YWwoJycpOyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAkZGlnaXRzLmVxKDApLmZvY3VzKCk7XHJcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICRjb2RlLnJlbW92ZUNsYXNzKCd2YWxpZCBpbnZhbGlkJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vLyBJbml0aWFsaXplIERldGFpbCBTY3JlZW4gY29tcG9uZW50cy5cclxuY29uc3Qgc2VhcmNoSnNvbiA9IHNlYXJjaFRvSnNvbigpO1xyXG5cclxuc2hvd0xvYWRlcih0cnVlKTtcclxucmVxdWVzdC5tb3ZpZUJ5SWQoc2VhcmNoSnNvblsnaWRPcGVyYWNpb24nXSwgZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIGNvbnNvbGUubG9nKCclbycsIGRhdGEpO1xyXG4gICAgY2hhbmdlU2NyZWVuKCQoJy5kZXRhaWwtc2NyZWVuJyksIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zdCB7IGRhdG9zRmx1am86IHsgaWRQZWxpY3VsYSwgbm9tYnJlUGVsaWN1bGEsIG51bWVyb0N1ZW50YUNsaWVudGVDYWRlbmFCYXosIGJvdG9uUGFnbywgY29tcHJhcyB9LCBoZWFkZXJzIH0gPSBkYXRhLnJlc3VsdGFkbztcclxuICAgICAgICBcclxuICAgICAgICBnbG9iYWxJZFBlbGljdWxhID0gaWRQZWxpY3VsYTtcclxuICAgICAgICBnbG9iYWxCb3RvblBhZ28gPSBib3RvblBhZ28udHJhbnNhY2Npb247XHJcbiAgICAgICAgZ2xvYmFsQ29tcHJhcyA9IGNvbXByYXMudHJhbnNhY2Npb247XHJcbiAgICAgICAgZ2xvYmFsSGVhZGVycyA9IGhlYWRlcnM7XHJcblxyXG4gICAgICAgICQoJy5kZXRhaWwtc2NyZWVuJykuZmluZCgnW2RhdGEtaWQ9XCJub21icmVcIl0nKS50ZXh0KG5vbWJyZVBlbGljdWxhKTtcclxuICAgICAgICAkKCcuZGV0YWlsLXNjcmVlbicpLmZpbmQoJ1tkYXRhLWlkPVwicHJlY2lvXCJdJykudGV4dChmb3JtYXRBbW91bnQoYm90b25QYWdvLnRyYW5zYWNjaW9uLmRldGFsbGVQYWdvLm1vbnRvRW52aW8pKTtcclxuICAgICAgICAkKCcuZGV0YWlsLXNjcmVlbicpLmZpbmQoJ1tkYXRhLWlkPVwidGFyamV0YVwiXScpLnRleHQobnVtZXJvQ3VlbnRhQ2xpZW50ZUNhZGVuYUJheik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc2hvd0xvYWRlcihmYWxzZSk7XHJcbiAgICB9KTtcclxufSwgZnVuY3Rpb24gKCkge1xyXG5cclxufSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmNvbnN0ICRhZHZpY2VzID0gJCgnLmFkdmljZS5maXhlZCcpO1xyXG5cclxuJGFkdmljZXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCAkYWR2aWNlID0gJCh0aGlzKTtcclxuICAgIGNvbnN0ICRjbG9zZUJ0biA9ICRhZHZpY2UuZmluZCgnLmNsb3NlLWJ0bicpO1xyXG5cclxuICAgICRjbG9zZUJ0bi5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2hvd0FkdmljZSgkYWR2aWNlLCBmYWxzZSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG4kKCcuZGV0YWlsLXNjcmVlbiAuc3dpcGUtYnRuJykuc3dpcGUoe1xyXG4gICAgY2I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzaG93TG9hZGVyKHRydWUpO1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IE9wZW4gZGlnaXRhbCBzaWduJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7XHJcbiAgICAgICAgICAgICAgICBcIngtc2ljdVwiOiBnbG9iYWxIZWFkZXJzWyd4LXNpY3UnXSxcclxuICAgICAgICAgICAgICAgIFwieC1pZC1pbnRlcmFjY2lvblwiOiBnbG9iYWxIZWFkZXJzWyd4LWlkLWludGVyYWNjaW9uJ10sXHJcbiAgICAgICAgICAgICAgICBcIngtdG9rZW4tdXN1YXJpb1wiOiBnbG9iYWxIZWFkZXJzWyd4LXRva2VuLXVzdWFyaW8nXVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgc2hvd0xvYWRlcih0cnVlKTtcclxuICAgICAgICAgICAgcmVxdWVzdC5wYXltZW50QnV0dG9uKGhlYWRlcnMsIGdsb2JhbEJvdG9uUGFnbywgZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzY3JpcHRzLmpzOiBQYXltZW50IGJ1dHRvbi4gJW8nLCBkYXRhKTtcclxuICAgICAgICAgICAgICAgIHJlcXVlc3QuYnV5TW92aWUoZ2xvYmFsSWRQZWxpY3VsYSwgaGVhZGVycywgeyAuLi5nbG9iYWxDb21wcmFzLCBmZWNoYU9wZXJhY2lvbjogZGF0YS5yZXN1bHRhZG8uZmVjaGFPcGVyYWNpb24sIG51bWVyb01vdmltaWVudG86IGRhdGEucmVzdWx0YWRvLmZlY2hhT3BlcmFjaW9uIH0sIGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IEJ1eSBtb3ZpZS4gJW8nLCBkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VTY3JlZW4oJCgnLnJlc3VtZS1zY3JlZW4nKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0xvYWRlcihmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgNTAwKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5cclxuLy8gSW5pdGlhbGl6ZSBBdXRoIFNjcmVlbiBjb21wb25lbnRzLlxyXG5jb25zdCAkZGlnaXRzID0gJCgnLmF1dGgtc2NyZWVuIC5kaWdpdCBpbnB1dCcpO1xyXG5cclxuJGRpZ2l0cy5vbigna2V5cHJlc3Mga2V5ZG93biBrZXl1cCBpbnB1dCBjaGFuZ2UgcGFzdGUnLCBudW1iZXJGaWx0ZXIpXHJcbiRkaWdpdHMub24oJ2tleXVwJywgaGFuZGxlRGlnaXRLZXl1cCk7XHJcblxyXG4kZGlnaXRzLmVxKDApLmZvY3VzKCk7XHJcblxyXG5cclxuLy8gSW5pdGlhbGl6ZSBjbG9zZSBidXR0b25zLlxyXG4kKCcuc2NyZWVuIGhlYWRlciAuY2xvc2UtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IENsb3NpbmcgV2ViVmlldycpO1xyXG5cclxufSk7XHJcblxyXG5cclxuLy8gSW5pdGlhbGl6ZSBzaGFyZSBidXR0b24uXHJcbiQoJy5zaGFyZS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnc2NyaXB0cy5qczogU2hhcmluZyB0aWNrZXQnKTtcclxuXHJcbn0pO1xyXG5cclxuXHJcbi8vIEluaXRpYWxpemUgbW92aWUgYnV0dG9uLlxyXG4kKCcubW92aWUtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IFBsYXkgbW92aWUnKTtcclxuXHJcbn0pO1xyXG4iXX0=

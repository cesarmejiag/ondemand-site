"use strict";!function(c){c.fn.swipe=function(e){var r=c.extend({cb:function(){console.log("swipe done")}},e);return this.each(function(){var n=c(this),o=0,t=0,s=!1,i=n.find(".slider"),a=n.find(".text");i.on("mousedown touchstart",function(e){s=!0,t=n.width()-c(this).width()+10,o=e.clientX||e.originalEvent.touches[0].pageX}),c(document.body,i).on("mouseup touchend",function(e){if(s){if(s=!1,(e.clientX||e.changedTouches[0].pageX)-o<t)return a.fadeTo(300,1),void i.animate({left:"-10px"},300);r.cb()}}),c(document.body).on("mousemove touchmove",function(e){var n;s&&(e=1-(n=(e.clientX||e.originalEvent.touches[0].pageX)-o)/t,a.fadeTo(0,e),n<=0?i.css({left:"-10px"}):t+10<=n?i.css({left:t+"px"}):i.css({left:n-10}))})})}}(jQuery);var request={auth:function(e,n){var o={Authorization:"Basic "+btoa("18h8vanvrh4pui1lrntc1niljf:1ge31bhjrdk9d0ja14mft8qepi4clkt805jqb2svqvmb4so1v4g7"),"Content-Type":"application/x-www-form-urlencoded",Cookie:"XSRF-TOKEN=b4a54f1b-afe5-4aee-9a76-00f920418b6e"};request.send("https://omm6oug5pg.execute-api.us-east-1.amazonaws.com/desarrollo/oauth2/v1/token","POST","grant_type=client_credentials",o,e,n)},pay:function(e,n,o,t,s,i){t=t?"https://api.baz.app/superapp/pagos/captacion/traspasos/v1/boton-pago":"https://apigateway.superappbaz.com/integracion/superapp/pagos/captacion/traspasos/v1/boton-pago",o=JSON.stringify(o);request.send(t,"POST",o,n,s,i)},send:function(e,n,o,t,s,i){var a,r=new Headers;for(a in t)r.append(a,t[a]);fetch(e,{method:n,headers:r,body:o,redirect:"follow"}).then(function(e){return e.json()}).then(s).catch(i)}},environment=!1;function bind(t){$("[data-id]").each(function(){var e=$(this),n=e.data("id"),o=t[n];"precio"===n?e.html(formatAmount(o)):"saldo"===n?"false"===o&&setTimeout(function(){showAdvice(e,!0)},500):e.html(o)})}function bindFromStr(e){try{bind(JSON.parse(e))}catch(e){console.log(e)}}function changeScreen(e,n){$(".screen").addClass("no-visible"),e.removeClass("no-visible"),n()}function formatAmount(e){return"$ "+Number(e).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g,",")}function handleDigitKeyup(e){var n=e.target,o=e.keyCode,t=$(n.parentNode);8===o?0<t.prev().length&&((e=t.prev().find("input")).val(""),e.focus()):47<o&&o<58&&""!==n.value&&0<t.next().length&&t.next().find("input").focus(),validateCode()}function numberFilter(e){/^\d{0,1}$/.test(this.value)?(this.oldValue=this.value,this.oldSelectionStart=this.selectionStart,this.oldSelectionEnd=this.selectionEnd):this.hasOwnProperty("oldValue")?(this.value=this.oldValue,this.setSelectionRange(this.oldSelectionStart,this.oldSelectionEnd)):this.value=""}function fakeRequest(e,n){setTimeout(function(){n("000001"===e)},1500)}function payMovie(e){function n(e){console.log(JSON.stringify(e)),window.webkit.messageHandlers.errorPaymentResponse.postMessage("errorPaymentResponse|"+JSON.stringify(e))}try{var o=JSON.parse(e);window.webkit.messageHandlers.showLoader.postMessage("showLoader"),request.pay("",o.headers,o.requestBody,environment,function(e){"201"==e.codigo?window.webkit.messageHandlers.paymentResponse.postMessage("paymentResponse|"+JSON.stringify({error:{code:0,data:e}})):n({error:{code:e.codigo,message:e.mensaje}}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")},function(e){n({error:{code:500,message:e.message}}),window.webkit.messageHandlers.hideLoader.postMessage("hideLoader")})}catch(e){n(e)}}function searchToJson(){for(var e,n=location.search.substring(1).split("&"),o={},t=0;t<n.length;t++)""!==n[t]&&(e=n[t].split("="),o[decodeURIComponent(e[0])]=decodeURIComponent(e[1]));return o}function showAdvice(e,n){n?e.addClass("no-visible"):e.removeClass("no-visible")}function showLoader(e){var n=$(".loader");e?(n.length<=0&&(n=$('<div class="loader">')),$("body").append(n),setTimeout(function(){return n.addClass("loader-visible")},10)):(n.removeClass("loader-visible"),setTimeout(function(){return n.remove()},375))}function validateCode(){var n=$(".auth-screen .code"),o=$(".auth-screen .digit input"),e="";o.each(function(){e+=this.value}),6===e.length?(showLoader(!0),fakeRequest(e,function(e){e?(n.addClass("valid"),changeScreen($(".resume-screen"),function(){showLoader(!1)})):(showLoader(!1),n.addClass("invalid"),setTimeout(function(){o.each(function(){$(this).val("")}),o.eq(0).focus()},100))})):n.removeClass("valid invalid")}var searchJson=searchToJson(),environment="true"===searchJson.environment;bind(searchJson);var $advices=$(".advice.fixed");$advices.each(function(){var e=$(this);e.find(".close-btn").on("click",function(){showAdvice(e,!1)})}),$(".detail-screen .swipe-btn").swipe({cb:function(){showLoader(!0),setTimeout(function(){console.log("scripts.js: Open digital sign"),window.webkit.messageHandlers.showDigitalSign.postMessage("showDigitalSign")},500)}});var $digits=$(".auth-screen .digit input");$digits.on("keypress keydown keyup input change paste",numberFilter),$digits.on("keyup",handleDigitKeyup),$digits.eq(0).focus(),$(".screen header .close-btn").on("click",function(){console.log("scripts.js: Closing WebView"),window.webkit.messageHandlers.closeMoviePayment.postMessage("closeMoviePayment")}),$(".share-btn").on("click",function(){console.log("scripts.js: Sharing ticket"),window.webkit.messageHandlers.shareTicket.postMessage("shareTicket")}),$(".movie-btn").on("click",function(){console.log("scripts.js: Play movie"),window.webkit.messageHandlers.playMovie.postMessage("playMovie")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5zd2lwZS5qcyIsInJlcXVlc3QuanMiLCJzY3JpcHRzLmpzIl0sIm5hbWVzIjpbIiQiLCJmbiIsInN3aXBlIiwib3B0aW9ucyIsInNldHRpbmdzIiwiZXh0ZW5kIiwiY2IiLCJjb25zb2xlIiwibG9nIiwidGhpcyIsImVhY2giLCIkdGhpcyIsImluaXRpYWxNb3VzZSIsInNsaWRlTW92ZW1lbnRUb3RhbCIsIm1vdXNlSXNEb3duIiwiJHNsaWRlciIsImZpbmQiLCIkdGV4dCIsIm9uIiwiZXZlbnQiLCJ3aWR0aCIsImNsaWVudFgiLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsInBhZ2VYIiwiZG9jdW1lbnQiLCJib2R5IiwiY2hhbmdlZFRvdWNoZXMiLCJmYWRlVG8iLCJhbmltYXRlIiwibGVmdCIsInJlbGF0aXZlTW91c2UiLCJzbGlkZVBlcmNlbnQiLCJjc3MiLCJqUXVlcnkiLCJyZXF1ZXN0IiwiYXV0aCIsInN1Y2Nlc3MiLCJlcnJvciIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiYnRvYSIsIkNvbnRlbnQtVHlwZSIsIkNvb2tpZSIsInNlbmQiLCJwYXkiLCJhY2Nlc3NUb2tlbiIsInByb2R1Y3Rpb24iLCJ1cmwiLCJyYXciLCJKU09OIiwic3RyaW5naWZ5IiwibWV0aG9kIiwianNvbkhlYWRlcnMiLCJwcm9wIiwiSGVhZGVycyIsImFwcGVuZCIsImZldGNoIiwicmVkaXJlY3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiZW52aXJvbm1lbnQiLCJiaW5kIiwidmFsdWVzIiwiJHRhZyIsImlkIiwiZGF0YSIsInZhbHVlIiwiaHRtbCIsImZvcm1hdEFtb3VudCIsInNldFRpbWVvdXQiLCJzaG93QWR2aWNlIiwiYmluZEZyb21TdHIiLCJzdHJKc29uIiwicGFyc2UiLCJlcnIiLCJjaGFuZ2VTY3JlZW4iLCIkc2NyZWVuIiwiY2FsbGJhY2siLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiYW1vdW50IiwiTnVtYmVyIiwidG9GaXhlZCIsInJlcGxhY2UiLCJoYW5kbGVEaWdpdEtleXVwIiwiX3JlZiIsInRhcmdldCIsImtleUNvZGUiLCIkcGFyZW50IiwicGFyZW50Tm9kZSIsInByZXYiLCJsZW5ndGgiLCIkaW5wdXQiLCJ2YWwiLCJmb2N1cyIsIm5leHQiLCJ2YWxpZGF0ZUNvZGUiLCJudW1iZXJGaWx0ZXIiLCJ0ZXN0Iiwib2xkVmFsdWUiLCJvbGRTZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwib2xkU2VsZWN0aW9uRW5kIiwic2VsZWN0aW9uRW5kIiwiaGFzT3duUHJvcGVydHkiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImZha2VSZXF1ZXN0IiwiY29kZSIsInBheU1vdmllIiwiaGFuZGxlRXJyIiwid2luZG93Iiwid2Via2l0IiwibWVzc2FnZUhhbmRsZXJzIiwiZXJyb3JQYXltZW50UmVzcG9uc2UiLCJwb3N0TWVzc2FnZSIsInNob3dMb2FkZXIiLCJwYXlSZXMiLCJjb2RpZ28iLCJwYXltZW50UmVzcG9uc2UiLCJtZXNzYWdlIiwibWVuc2FqZSIsImhpZGVMb2FkZXIiLCJzZWFyY2hUb0pzb24iLCJwYXJ0cyIsInBhaXJzIiwibG9jYXRpb24iLCJzZWFyY2giLCJzdWJzdHJpbmciLCJzcGxpdCIsIm9iamVjdCIsImkiLCJkZWNvZGVVUklDb21wb25lbnQiLCIkZWwiLCJmbGFnIiwic2hvdyIsIiRsb2FkZXIiLCJyZW1vdmUiLCIkY29kZSIsIiRkaWdpdHMiLCJlcSIsInNlYXJjaEpzb24iLCIkYWR2aWNlcyIsIiRhZHZpY2UiLCJzaG93RGlnaXRhbFNpZ24iLCJjbG9zZU1vdmllUGF5bWVudCIsInNoYXJlVGlja2V0IiwicGxheU1vdmllIl0sIm1hcHBpbmdzIjoiY0FFQSxTQUFBQSxHQUNBQSxFQUFBQyxHQUFBQyxNQUFBLFNBQUFDLEdBQ0EsSUFBQUMsRUFBQUosRUFBQUssT0FBQSxDQUNBQyxHQUFBLFdBQ0FDLFFBQUFDLElBQUEsZ0JBRUFMLEdBRUEsT0FBQU0sS0FBQUMsS0FBQSxXQUNBLElBQUFDLEVBQUFY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QUEsR0FDQXNCLEVBQUEzRCxTQUFBLFdBRUFULFdBQUEsV0FDQXFFLEVBQUFsSSxLQUFBLFdBQUFWLEVBQUFTLE1BQUFzRixJQUFBLE1BQ0E2QyxFQUFBQyxHQUFBLEdBQUE3QyxTQUNBLFNBSUEyQyxFQUFBMUQsWUFBQSxpQkFNQSxJQUFBNkQsV0FBQWxCLGVBRUE5RCxZQUFBLFNBQUFnRixXQUFBLFlBQ0EvRSxLQUFBK0UsWUFFQSxJQUFBQyxTQUFBL0ksRUFBQSxpQkFFQStJLFNBQUFySSxLQUFBLFdBQ0EsSUFBQXNJLEVBQUFoSixFQUFBUyxNQUNBdUksRUFBQWhJLEtBQUEsY0FFQUUsR0FBQSxRQUFBLFdBQ0FzRCxXQUFBd0UsR0FBQSxPQUlBaEosRUFBQSw2QkFBQUUsTUFBQSxDQUNBSSxHQUFBLFdBQ0ErRyxZQUFBLEdBRUE5QyxXQUFBLFdBQ0FoRSxRQUFBQyxJQUFBLGlDQUNBd0csT0FBQUMsT0FBQUMsZ0JBQUErQixnQkFBQTdCLFlBQUEsb0JBQ0EsUUFNQSxJQUFBd0IsUUFBQTVJLEVBQUEsNkJBRUE0SSxRQUFBMUgsR0FBQSw0Q0FBQWlGLGNBQ0F5QyxRQUFBMUgsR0FBQSxRQUFBb0Usa0JBRUFzRCxRQUFBQyxHQUFBLEdBQUE3QyxRQUlBaEcsRUFBQSw2QkFBQWtCLEdBQUEsUUFBQSxXQUNBWCxRQUFBQyxJQUFBLCtCQUNBd0csT0FBQUMsT0FBQUMsZ0JBQUFnQyxrQkFBQTlCLFlBQUEsdUJBS0FwSCxFQUFBLGNBQUFrQixHQUFBLFFBQUEsV0FDQVgsUUFBQUMsSUFBQSw4QkFDQXdHLE9BQUFDLE9BQUFDLGdCQUFBaUMsWUFBQS9CLFlBQUEsaUJBS0FwSCxFQUFBLGNBQUFrQixHQUFBLFFBQUEsV0FDQVgsUUFBQUMsSUFBQSwwQkFDQXdHLE9BQUFDLE9BQUFDLGdCQUFBa0MsVUFBQWhDLFlBQUEiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZWZlcmVuY2U6IGh0dHBzOi8vY29kZXBlbi5pby9ncHJlc3N1dHRvNS9wZW4vTmpKb2JHP2VkaXRvcnM9MDAxMFxyXG5cclxuKGZ1bmN0aW9uICgkKSB7XHJcbiAgICAkLmZuLnN3aXBlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICB2YXIgc2V0dGluZ3MgPSAkLmV4dGVuZCh7XHJcbiAgICAgICAgICAgIGNiOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzd2lwZSBkb25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHZhciBpbml0aWFsTW91c2UgPSAwO1xyXG4gICAgICAgICAgICB2YXIgc2xpZGVNb3ZlbWVudFRvdGFsID0gMDtcclxuICAgICAgICAgICAgdmFyIG1vdXNlSXNEb3duID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHZhciAkc2xpZGVyID0gJHRoaXMuZmluZCgnLnNsaWRlcicpO1xyXG4gICAgICAgICAgICB2YXIgJHRleHQgPSAkdGhpcy5maW5kKCcudGV4dCcpO1xyXG5cclxuICAgICAgICAgICAgJHNsaWRlci5vbignbW91c2Vkb3duIHRvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIG1vdXNlSXNEb3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHNsaWRlTW92ZW1lbnRUb3RhbCA9ICR0aGlzLndpZHRoKCkgLSAkKHRoaXMpLndpZHRoKCkgKyAxMDtcclxuICAgICAgICAgICAgICAgIGluaXRpYWxNb3VzZSA9IGV2ZW50LmNsaWVudFggfHwgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdLnBhZ2VYO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoZG9jdW1lbnQuYm9keSwgJHNsaWRlcikub24oJ21vdXNldXAgdG91Y2hlbmQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICghbW91c2VJc0Rvd24pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgbW91c2VJc0Rvd24gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50TW91c2UgPSBldmVudC5jbGllbnRYIHx8IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlbGF0aXZlTW91c2UgPSBjdXJyZW50TW91c2UgLSBpbml0aWFsTW91c2U7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlTW91c2UgPCBzbGlkZU1vdmVtZW50VG90YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAkdGV4dC5mYWRlVG8oMzAwLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICAkc2xpZGVyLmFuaW1hdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBcIi0xMHB4XCJcclxuICAgICAgICAgICAgICAgICAgICB9LCAzMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvKiAkc2xpZGVyLmFkZENsYXNzKCd1bmxvY2tlZCcpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2xvY2tlcicpLnRleHQoJ2xvY2tfb3V0bGluZScpO1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5vbignY2xpY2sgdGFwJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHNsaWRlci5oYXNDbGFzcygndW5sb2NrZWQnKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5yZW1vdmVDbGFzcygndW5sb2NrZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2xvY2tlcicpLnRleHQoJ2xvY2tfb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2xpZGVyLm9mZignY2xpY2sgdGFwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9LCAwKTsgKi9cclxuXHJcbiAgICAgICAgICAgICAgICBzZXR0aW5ncy5jYigpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJChkb2N1bWVudC5ib2R5KS5vbignbW91c2Vtb3ZlIHRvdWNobW92ZScsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFtb3VzZUlzRG93bilcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRNb3VzZSA9IGV2ZW50LmNsaWVudFggfHwgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdLnBhZ2VYO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlbGF0aXZlTW91c2UgPSBjdXJyZW50TW91c2UgLSBpbml0aWFsTW91c2U7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2xpZGVQZXJjZW50ID0gMSAtIChyZWxhdGl2ZU1vdXNlIC8gc2xpZGVNb3ZlbWVudFRvdGFsKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkdGV4dC5mYWRlVG8oMCwgc2xpZGVQZXJjZW50KTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocmVsYXRpdmVNb3VzZSA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNsaWRlci5jc3MoeyAnbGVmdCc6ICctMTBweCcgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlTW91c2UgPj0gc2xpZGVNb3ZlbWVudFRvdGFsICsgMTApIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2xpZGVyLmNzcyh7ICdsZWZ0Jzogc2xpZGVNb3ZlbWVudFRvdGFsICsgJ3B4JyB9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkc2xpZGVyLmNzcyh7ICdsZWZ0JzogcmVsYXRpdmVNb3VzZSAtIDEwIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSkoalF1ZXJ5KTtcclxuIiwiY29uc3QgcmVxdWVzdCA9IHtcclxuICAgIC8qKlxyXG4gICAgICogQXV0aGVudGljYXRlLlxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gc3VjY2Vzc1xyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gZXJyb3JcclxuICAgICAqL1xyXG4gICAgYXV0aDogZnVuY3Rpb24gKHN1Y2Nlc3MsIGVycm9yKSB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gXCJodHRwczovL29tbTZvdWc1cGcuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVzYXJyb2xsby9vYXV0aDIvdjEvdG9rZW5cIjtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0ge1xyXG4gICAgICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogXCJCYXNpYyBcIiArIGJ0b2EoXCIxOGg4dmFudnJoNHB1aTFscm50YzFuaWxqZlwiICsgXCI6XCIgKyBcIjFnZTMxYmhqcmRrOWQwamExNG1mdDhxZXBpNGNsa3Q4MDVqcWIyc3Zxdm1iNHNvMXY0ZzdcIiksXHJcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsXHJcbiAgICAgICAgICAgIFwiQ29va2llXCI6IFwiWFNSRi1UT0tFTj1iNGE1NGYxYi1hZmU1LTRhZWUtOWE3Ni0wMGY5MjA0MThiNmVcIlxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgYm9keSA9IFwiZ3JhbnRfdHlwZT1jbGllbnRfY3JlZGVudGlhbHNcIjtcclxuXHJcbiAgICAgICAgcmVxdWVzdC5zZW5kKHVybCwgJ1BPU1QnLCBib2R5LCBoZWFkZXJzLCBzdWNjZXNzLCBlcnJvcik7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGF5LlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFjY2Vzc1Rva2VuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gaGVhZGVyc1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGJvZHlcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcHJvZHVjdGlvblxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gc3VjY2Vzc1xyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gZXJyb3JcclxuICAgICAqL1xyXG4gICAgcGF5OiBmdW5jdGlvbiAoYWNjZXNzVG9rZW4sIGhlYWRlcnMsIGJvZHksIHByb2R1Y3Rpb24sIHN1Y2Nlc3MsIGVycm9yKSB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gcHJvZHVjdGlvbiBcclxuICAgICAgICAgICAgPyBcImh0dHBzOi8vYXBpLmJhei5hcHAvc3VwZXJhcHAvcGFnb3MvY2FwdGFjaW9uL3RyYXNwYXNvcy92MS9ib3Rvbi1wYWdvXCJcclxuICAgICAgICAgICAgOiBcImh0dHBzOi8vYXBpZ2F0ZXdheS5zdXBlcmFwcGJhei5jb20vaW50ZWdyYWNpb24vc3VwZXJhcHAvcGFnb3MvY2FwdGFjaW9uL3RyYXNwYXNvcy92MS9ib3Rvbi1wYWdvXCI7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJhdyA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xyXG5cclxuICAgICAgICAvLyBoZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiICsgYWNjZXNzVG9rZW47XHJcbiAgICAgICAgcmVxdWVzdC5zZW5kKHVybCwgJ1BPU1QnLCByYXcsIGhlYWRlcnMsIHN1Y2Nlc3MsIGVycm9yKTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYWtlIHJlcXVlc3QuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsIFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1ldGhvZFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGJvZHlcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uSGVhZGVycyBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IHN1Y2Nlc3MgXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBlcnJvclxyXG4gICAgICovXHJcbiAgICBzZW5kOiBmdW5jdGlvbiAodXJsLCBtZXRob2QsIGJvZHksIGpzb25IZWFkZXJzLCBzdWNjZXNzLCBlcnJvcikge1xyXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBwcm9wIGluIGpzb25IZWFkZXJzKSB7XHJcbiAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKHByb3AsIGpzb25IZWFkZXJzW3Byb3BdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZldGNoKHVybCwgeyBtZXRob2QsIGhlYWRlcnMsIGJvZHksIHJlZGlyZWN0OiAnZm9sbG93JyB9KVxyXG4gICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcbiAgICAgICAgICAgIC50aGVuKHN1Y2Nlc3MpXHJcbiAgICAgICAgICAgIC5jYXRjaChlcnJvcik7XHJcbiAgICB9XHJcbn07IiwibGV0IGVudmlyb25tZW50ID0gZmFsc2U7XHJcblxyXG4vKipcclxuICogQmluZCBKU09OIHRvIEhUTUwuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXNcclxuICovXHJcbmZ1bmN0aW9uIGJpbmQodmFsdWVzKSB7XHJcbiAgICBjb25zdCAkdGFncyA9ICQoJ1tkYXRhLWlkXScpO1xyXG5cclxuICAgICR0YWdzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnN0ICR0YWcgPSAkKHRoaXMpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gJHRhZy5kYXRhKCdpZCcpO1xyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2lkXTtcclxuXHJcbiAgICAgICAgaWYgKGlkID09PSAncHJlY2lvJykge1xyXG4gICAgICAgICAgICAkdGFnLmh0bWwoZm9ybWF0QW1vdW50KHZhbHVlKSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpZCA9PT0gJ3NhbGRvJykge1xyXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09ICdmYWxzZScpIHtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4geyBzaG93QWR2aWNlKCR0YWcsIHRydWUpOyB9LCA1MDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHRhZy5odG1sKHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIHN0cmluZyB0byBvYmplY3QgYW5kIHRoZW4gYmluZC5cclxuICogQHBhcmFtIHtzdHJpbmd9IHN0ckpzb24gXHJcbiAqL1xyXG5mdW5jdGlvbiBiaW5kRnJvbVN0cihzdHJKc29uKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKHN0ckpzb24pO1xyXG4gICAgICAgIGJpbmQoanNvbik7XHJcbiAgICB9IGNhdGNoIChlcnIpIHsgY29uc29sZS5sb2coZXJyKTsgfVxyXG59XHJcblxyXG4vKipcclxuICogQ2hhbmdlIHNjcmVlbi5cclxuICogQHBhcmFtIHtqUXVlcnl9ICRzY3JlZW5cclxuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcclxuICovXHJcbmZ1bmN0aW9uIGNoYW5nZVNjcmVlbigkc2NyZWVuLCBjYWxsYmFjaykge1xyXG4gICAgJCgnLnNjcmVlbicpLmFkZENsYXNzKCduby12aXNpYmxlJyk7XHJcbiAgICAkc2NyZWVuLnJlbW92ZUNsYXNzKCduby12aXNpYmxlJyk7XHJcblxyXG4gICAgY2FsbGJhY2soKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCBhbW91bnQgd2l0aCBjdXJyZW5jeSBmb3JtYXQuXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBhbW91bnQgXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBmb3JtYXRBbW91bnQoYW1vdW50KSB7XHJcbiAgICByZXR1cm4gJyQgJyArIE51bWJlcihhbW91bnQpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgJywnKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhhbmRsZSBkaWdpdCBrZXl1cCBldmVudC5cclxuICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudFxyXG4gKi9cclxuZnVuY3Rpb24gaGFuZGxlRGlnaXRLZXl1cCh7IHRhcmdldCwga2V5Q29kZSB9KSB7XHJcbiAgICBjb25zdCAkcGFyZW50ID0gJCh0YXJnZXQucGFyZW50Tm9kZSk7XHJcblxyXG4gICAgaWYgKGtleUNvZGUgPT09IDgpIHtcclxuICAgICAgICBpZiAoJHBhcmVudC5wcmV2KCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBjb25zdCAkaW5wdXQgPSAkcGFyZW50LnByZXYoKS5maW5kKCdpbnB1dCcpO1xyXG5cclxuICAgICAgICAgICAgJGlucHV0LnZhbCgnJyk7XHJcbiAgICAgICAgICAgICRpbnB1dC5mb2N1cygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9IGVsc2UgaWYgKGtleUNvZGUgPiA0NyAmJiBrZXlDb2RlIDwgNTgpIHtcclxuICAgICAgICBpZiAodGFyZ2V0LnZhbHVlICE9PSAnJykge1xyXG4gICAgICAgICAgICBpZiAoJHBhcmVudC5uZXh0KCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgJGlucHV0ID0gJHBhcmVudC5uZXh0KCkuZmluZCgnaW5wdXQnKTtcclxuICAgICAgICAgICAgICAgICRpbnB1dC5mb2N1cygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhbGlkYXRlQ29kZSgpO1xyXG59XHJcblxyXG4vKipcclxuICogQXBwbHkgbnVtYmVyIGZpbHRlci5cclxuICogQHBhcmFtIHtFdmVudH0gZXZlbnRcclxuICovXHJcbmZ1bmN0aW9uIG51bWJlckZpbHRlcihldmVudCkge1xyXG4gICAgY29uc3QgZmlsdGVyID0gL15cXGR7MCwxfSQvO1xyXG5cclxuICAgIGlmIChmaWx0ZXIudGVzdCh0aGlzLnZhbHVlKSkge1xyXG4gICAgICAgIHRoaXMub2xkVmFsdWUgPSB0aGlzLnZhbHVlO1xyXG4gICAgICAgIHRoaXMub2xkU2VsZWN0aW9uU3RhcnQgPSB0aGlzLnNlbGVjdGlvblN0YXJ0O1xyXG4gICAgICAgIHRoaXMub2xkU2VsZWN0aW9uRW5kID0gdGhpcy5zZWxlY3Rpb25FbmQ7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoJ29sZFZhbHVlJykpIHtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5vbGRWYWx1ZTtcclxuICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKHRoaXMub2xkU2VsZWN0aW9uU3RhcnQsIHRoaXMub2xkU2VsZWN0aW9uRW5kKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogRG8gZmFrZSByZXF1ZXN0LlxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xyXG4gKi9cclxuZnVuY3Rpb24gZmFrZVJlcXVlc3QoY29kZSwgY2FsbGJhY2spIHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGNhbGxiYWNrKGNvZGUgPT09ICcwMDAwMDEnKTtcclxuICAgIH0sIDE1MDApO1xyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IHN0ckpzb25cclxuICovXHJcbmZ1bmN0aW9uIHBheU1vdmllKHN0ckpzb24pIHtcclxuICAgIGNvbnN0IGhhbmRsZUVyciA9IGVyciA9PiB7XHJcbiAgICAgICAgLy8gY29uc3QgbWVzc2FnZSA9IHR5cGVvZiBlcnIgPT09ICdvYmplY3QnID8gZXJyLm1lc3NhZ2UgOiBlcnI7XHJcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcbiAgICAgICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMuZXJyb3JQYXltZW50UmVzcG9uc2UucG9zdE1lc3NhZ2UoXCJlcnJvclBheW1lbnRSZXNwb25zZXxcIiArIEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2Uoc3RySnNvbik7XHJcblxyXG4gICAgICAgIC8qIHJlcXVlc3QuYXV0aChmdW5jdGlvbiAoYXV0aFJlcykge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGF1dGhSZXNbJ2FjY2Vzc190b2tlbiddID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5wYXkoYXV0aFJlc1snYWNjZXNzX3Rva2VuJ10sIGpzb25bJ2hlYWRlcnMnXSwganNvblsncmVxdWVzdEJvZHknXSwgZnVuY3Rpb24gKHBheVJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXlSZXMuY29kaWdvID09ICcyMDEnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgnd2Via2l0JyBpbiB3aW5kb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnBheW1lbnRSZXNwb25zZS5wb3N0TWVzc2FnZShcInBheW1lbnRSZXNwb25zZXxcIiArIEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6IHsgY29kZTogMCwgbWVzc2FnZTogcGF5UmVzLm1lbnNhamUgfSB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVFcnIoeyBlcnJvcjogeyBjb2RlOiBwYXlSZXMuY29kaWdvLCBtZXNzYWdlOiBwYXlSZXMubWVuc2FqZSB9IH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycih7IGVycm9yOiB7IGNvZGU6IDUwMCwgbWVzc2FnZTogZXJyLm1lc3NhZ2UgfSB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2UgeyBcclxuICAgICAgICAgICAgICAgIGhhbmRsZUVycih7IGVycm9yOiB7IGNvZGU6IC0xLCBtZXNzYWdlOiBhdXRoUmVzLm1lbnNhamUgfSB9KTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaGFuZGxlRXJyKHsgZXJyb3I6IHsgY29kZTogNTAwLCBtZXNzYWdlOiBlcnIubWVzc2FnZSB9IH0pO1xyXG4gICAgICAgIH0pOyAqL1xyXG5cclxuICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5zaG93TG9hZGVyLnBvc3RNZXNzYWdlKFwic2hvd0xvYWRlclwiKTtcclxuXHJcbiAgICAgICAgcmVxdWVzdC5wYXkoJycsIGpzb25bJ2hlYWRlcnMnXSwganNvblsncmVxdWVzdEJvZHknXSwgZW52aXJvbm1lbnQsIGZ1bmN0aW9uIChwYXlSZXMpIHtcclxuICAgICAgICAgICAgaWYgKHBheVJlcy5jb2RpZ28gPT0gJzIwMScpIHtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnBheW1lbnRSZXNwb25zZS5wb3N0TWVzc2FnZShcInBheW1lbnRSZXNwb25zZXxcIiArIEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6IHsgY29kZTogMCwgZGF0YTogcGF5UmVzIH0gfSkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaGFuZGxlRXJyKHsgZXJyb3I6IHsgY29kZTogcGF5UmVzLmNvZGlnbywgbWVzc2FnZTogcGF5UmVzLm1lbnNhamUgfSB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMuaGlkZUxvYWRlci5wb3N0TWVzc2FnZShcImhpZGVMb2FkZXJcIik7XHJcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xyXG4gICAgICAgICAgICBoYW5kbGVFcnIoeyBlcnJvcjogeyBjb2RlOiA1MDAsIG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0gfSk7XHJcbiAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLmhpZGVMb2FkZXIucG9zdE1lc3NhZ2UoXCJoaWRlTG9hZGVyXCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycikgeyBoYW5kbGVFcnIoZXJyKTsgfVxyXG59XHJcblxyXG4vKipcclxuICogUGFyc2UgbG9jYXRpb24uc2VhcmNoIHRvIEpTT04uXHJcbiAqIEByZXR1cm5zIG9iamVjdFxyXG4gKi9cclxuZnVuY3Rpb24gc2VhcmNoVG9Kc29uKCkge1xyXG4gICAgY29uc3QgcGFpcnMgPSBsb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpLnNwbGl0KCcmJyk7XHJcbiAgICBjb25zdCBvYmplY3QgPSB7fTtcclxuICAgIGxldCBpID0gMDtcclxuXHJcbiAgICBmb3IgKDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKHBhaXJzW2ldID09PSAnJykge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHBhcnRzID0gcGFpcnNbaV0uc3BsaXQoJz0nKTtcclxuICAgICAgICBvYmplY3RbZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzBdKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFydHNbMV0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBvYmplY3Q7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93IG9yIGhpZGUgYWR2aWNlLlxyXG4gKiBAcGFyYW0ge2pRdWVyeX0gJGVsIFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGZsYWcgXHJcbiAqL1xyXG5mdW5jdGlvbiBzaG93QWR2aWNlKCRlbCwgZmxhZykge1xyXG4gICAgaWYgKGZsYWcpIHtcclxuICAgICAgICAkZWwuYWRkQ2xhc3MoJ25vLXZpc2libGUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJGVsLnJlbW92ZUNsYXNzKCduby12aXNpYmxlJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93IG9yIGhpZGUgbG9hZGVyLlxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHNob3dcclxuICovXHJcbmZ1bmN0aW9uIHNob3dMb2FkZXIoc2hvdykge1xyXG4gICAgbGV0ICRsb2FkZXIgPSAkKCcubG9hZGVyJyk7XHJcblxyXG4gICAgaWYgKHNob3cpIHtcclxuICAgICAgICBpZiAoJGxvYWRlci5sZW5ndGggPD0gMCkge1xyXG4gICAgICAgICAgICAkbG9hZGVyID0gJCgnPGRpdiBjbGFzcz1cImxvYWRlclwiPicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJCgnYm9keScpLmFwcGVuZCgkbG9hZGVyKTtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+ICRsb2FkZXIuYWRkQ2xhc3MoJ2xvYWRlci12aXNpYmxlJyksIDEwKTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICRsb2FkZXIucmVtb3ZlQ2xhc3MoJ2xvYWRlci12aXNpYmxlJyk7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiAkbG9hZGVyLnJlbW92ZSgpLCAzNzUpO1xyXG5cclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFZhbGlkYXRlIGNvZGUgZnJvbSBjbGllbnQuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKi9cclxuZnVuY3Rpb24gdmFsaWRhdGVDb2RlKCkge1xyXG4gICAgY29uc3QgJGNvZGUgPSAkKCcuYXV0aC1zY3JlZW4gLmNvZGUnKTtcclxuICAgIGNvbnN0ICRkaWdpdHMgPSAkKCcuYXV0aC1zY3JlZW4gLmRpZ2l0IGlucHV0Jyk7XHJcbiAgICBsZXQgY29kZSA9IFwiXCI7XHJcblxyXG4gICAgJGRpZ2l0cy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb2RlICs9IHRoaXMudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoY29kZS5sZW5ndGggPT09IDYpIHtcclxuICAgICAgICBzaG93TG9hZGVyKHRydWUpO1xyXG5cclxuICAgICAgICBmYWtlUmVxdWVzdChjb2RlLCBzdWNjZXNzID0+IHtcclxuICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgICRjb2RlLmFkZENsYXNzKCd2YWxpZCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNoYW5nZVNjcmVlbigkKCcucmVzdW1lLXNjcmVlbicpLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0xvYWRlcihmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNob3dMb2FkZXIoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgJGNvZGUuYWRkQ2xhc3MoJ2ludmFsaWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAkZGlnaXRzLmVhY2goZnVuY3Rpb24gKCkgeyAkKHRoaXMpLnZhbCgnJyk7IH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICRkaWdpdHMuZXEoMCkuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIH0sIDEwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJGNvZGUucmVtb3ZlQ2xhc3MoJ3ZhbGlkIGludmFsaWQnKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIEluaXRpYWxpemUgRGV0YWlsIFNjcmVlbiBjb21wb25lbnRzLlxyXG5jb25zdCBzZWFyY2hKc29uID0gc2VhcmNoVG9Kc29uKCk7XHJcblxyXG5lbnZpcm9ubWVudCA9IHNlYXJjaEpzb25bJ2Vudmlyb25tZW50J10gPT09ICd0cnVlJztcclxuYmluZChzZWFyY2hKc29uKTtcclxuXHJcbmNvbnN0ICRhZHZpY2VzID0gJCgnLmFkdmljZS5maXhlZCcpO1xyXG5cclxuJGFkdmljZXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCAkYWR2aWNlID0gJCh0aGlzKTtcclxuICAgIGNvbnN0ICRjbG9zZUJ0biA9ICRhZHZpY2UuZmluZCgnLmNsb3NlLWJ0bicpO1xyXG5cclxuICAgICRjbG9zZUJ0bi5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2hvd0FkdmljZSgkYWR2aWNlLCBmYWxzZSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG4kKCcuZGV0YWlsLXNjcmVlbiAuc3dpcGUtYnRuJykuc3dpcGUoe1xyXG4gICAgY2I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzaG93TG9hZGVyKHRydWUpO1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NjcmlwdHMuanM6IE9wZW4gZGlnaXRhbCBzaWduJyk7XHJcbiAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnNob3dEaWdpdGFsU2lnbi5wb3N0TWVzc2FnZShcInNob3dEaWdpdGFsU2lnblwiKTtcclxuICAgICAgICB9LCA1MDApO1xyXG4gICAgfVxyXG59KTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIEF1dGggU2NyZWVuIGNvbXBvbmVudHMuXHJcbmNvbnN0ICRkaWdpdHMgPSAkKCcuYXV0aC1zY3JlZW4gLmRpZ2l0IGlucHV0Jyk7XHJcblxyXG4kZGlnaXRzLm9uKCdrZXlwcmVzcyBrZXlkb3duIGtleXVwIGlucHV0IGNoYW5nZSBwYXN0ZScsIG51bWJlckZpbHRlcilcclxuJGRpZ2l0cy5vbigna2V5dXAnLCBoYW5kbGVEaWdpdEtleXVwKTtcclxuXHJcbiRkaWdpdHMuZXEoMCkuZm9jdXMoKTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIGNsb3NlIGJ1dHRvbnMuXHJcbiQoJy5zY3JlZW4gaGVhZGVyIC5jbG9zZS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnc2NyaXB0cy5qczogQ2xvc2luZyBXZWJWaWV3Jyk7XHJcbiAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5jbG9zZU1vdmllUGF5bWVudC5wb3N0TWVzc2FnZShcImNsb3NlTW92aWVQYXltZW50XCIpO1xyXG59KTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIHNoYXJlIGJ1dHRvbi5cclxuJCgnLnNoYXJlLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCdzY3JpcHRzLmpzOiBTaGFyaW5nIHRpY2tldCcpO1xyXG4gICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMuc2hhcmVUaWNrZXQucG9zdE1lc3NhZ2UoXCJzaGFyZVRpY2tldFwiKTtcclxufSk7XHJcblxyXG5cclxuLy8gSW5pdGlhbGl6ZSBtb3ZpZSBidXR0b24uXHJcbiQoJy5tb3ZpZS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnc2NyaXB0cy5qczogUGxheSBtb3ZpZScpO1xyXG4gICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMucGxheU1vdmllLnBvc3RNZXNzYWdlKFwicGxheU1vdmllXCIpO1xyXG59KTtcclxuIl19
